{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","module.exports = \"/*.loginform-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    width: 24%;\\r\\n    margin: 12% auto;\\r\\n    background: #FBFBFB;\\r\\n    border: 0px solid #CCC;\\r\\n    padding: 0% 3%;\\r\\n    padding-bottom: 9%;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0px 8px 14px -2px #CCC;\\r\\n}\\r\\n\\r\\n.loginheading {\\r\\n    padding: 15% 1%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.loginactions {\\r\\n    margin-top: 1%;\\r\\n}\\r\\n\\r\\n.loginactions {\\r\\n    margin-top: 18px;\\r\\n    text-align: right;\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n.loginerr {\\r\\n    background: #ff4081;\\r\\n    padding: 5px 5px;\\r\\n    color: #FFF;\\r\\n    border-radius: 30px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    font-weight: 100;\\r\\n}\\r\\n\\r\\n*/\\r\\n\\r\\n.logocontainer {\\r\\n    margin-top: 3%;\\r\\n    padding: 2%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n.loginformcontainer {\\r\\n    width: 70%;\\r\\n    margin: 12% auto;\\r\\n    padding: 2%;\\r\\n}\\r\\n\\r\\n.loginformcontainer>h3 {\\r\\n    font-weight: 200;\\r\\n    letter-spacing: 2px;\\r\\n    text-align: center;\\r\\n    margin-bottom: 8%;\\r\\n    font-size: 2rem;\\r\\n    font-family: Roboto;\\r\\n}\\r\\n\\r\\n.forgotpassword{\\r\\n    text-decoration: underline;\\r\\n    float: right;\\r\\n    font-size: 0.72rem;\\r\\n    color: #787676;\\r\\n    letter-spacing: 1px;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.loginbtn{\\r\\n    width: 100%;\\r\\n    margin-top: 2%;\\r\\n    /* border-radius: 42px; */\\r\\n    padding: 1%;\\r\\n}\\r\\n\\r\\n.loginerr {\\r\\n    background: #ff4081;\\r\\n    padding: 5px 5px;\\r\\n    color: #FFF;\\r\\n    border-radius: 30px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    font-weight: 100;\\r\\n    text-indent: 10px;\\r\\n}\\r\\n\\r\\n/*//////////////////////////////////////////////////////////////////\\r\\n  [ login ]*/\\r\\n\\r\\n.limiter {\\r\\n    width: 100%;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.container-login100 {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    align-items: stretch;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.wrap-login100 {\\r\\n    /* width: 520px; */\\r\\n    width: 46%;\\r\\n    min-height: 100vh;\\r\\n    background: #fff;\\r\\n    border-radius: 2px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n/*------------------------------------------------------------------\\r\\n  [ Login100 more ]*/\\r\\n\\r\\n.login100-more {\\r\\n    background-repeat: no-repeat;\\r\\n    background-position: center;\\r\\n    background-size: cover;\\r\\n  /*  width: calc(100% - 520px); */\\r\\n    width:53%;\\r\\n    position: relative;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.login100-more::before {\\r\\n    content: \\\"\\\";\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    z-index: -1;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background: #010308;\\r\\n    background: linear-gradient(bottom, #e8519e, #c77ff2);\\r\\n    opacity: 0.3;\\r\\n}\\r\\n\\r\\n/*==================================================================\\r\\n  [ Form ]*/\\r\\n\\r\\n.login100-form {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.login100-form-title {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    font-family: Poppins-Bold;\\r\\n    font-size: 39px;\\r\\n    color: #333333;\\r\\n    line-height: 1.2;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n/*------------------------------------------------------------------\\r\\n  [ Input ]*/\\r\\n\\r\\n@media (max-width: 576px) {\\r\\n    .wrap-login100 {\\r\\n        padding-left: 15px;\\r\\n        padding-right: 15px;\\r\\n    }\\r\\n}\"","module.exports = \"<!--<div class=\\\"loginform-container\\\">\\n    <section class=\\\"loginheading mat-typography\\\">\\n        <h2>Sign In to continue</h2>\\n    </section>\\n\\n\\n    <form [formGroup]=\\\"loginForm\\\" novalidate (ngSubmit)=\\\"onSubmit(loginForm.value)\\\">\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Employee ID\\\" type=\\\"text\\\" formControlName=\\\"username\\\" autocomplete=\\\"off\\\">\\n            <mat-icon matSuffix>assignment_ind</mat-icon>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\">\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n\\n\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"loginButtonActive\\\">Login</button>\\n        <mat-spinner [diameter]=\\\"25\\\" style=\\\"margin:0 auto;\\\" *ngIf=\\\"loaderActive\\\"></mat-spinner>\\n\\n        <div class=\\\"loginactions\\\">\\n\\n             <mat-checkbox class=\\\"example-margin\\\" >Remember Me</mat-checkbox>\\n\\n        </div>\\n    </form>\\n\\n    <h4 class=\\\"loginerr\\\" *ngIf=\\\"invalidErr\\\">{{invalidErrMsg}}</h4>\\n\\n    \\n       \\n</div>\\n-->\\n\\n\\n\\n\\n\\n<div class=\\\"limiter\\\">\\n    <div class=\\\"container-login100\\\">\\n        <div class=\\\"login100-more\\\" style=\\\"background-image: url('assets/loginbg.jpg');\\\"></div>\\n\\n\\n\\n        <div class=\\\"wrap-login100 p-l-50 p-r-50 p-t-72 p-b-50\\\">\\n            <div class=\\\"container logocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n                <div fxFlex=\\\"50%\\\">\\n                    <img src=\\\"assets/logo.png\\\" style=\\\"width: 100%;\\\" />\\n                </div>\\n                <div fxFlex=\\\"50%\\\">\\n                    <img src=\\\"assets/logo2.png\\\" style=\\\"float: right;\\\" />\\n                </div>\\n            </div>\\n           \\n            <form [formGroup]=\\\"loginForm\\\" novalidate (ngSubmit)=\\\"onSubmit(loginForm.value)\\\" class=\\\"loginformcontainer\\\">\\n                <h3>\\n                    <span style=\\\"color:#34669e\\\"> Welcome</span>\\n                    <span style=\\\"color:#9fb07a\\\"> Back </span>\\n                </h3>\\n\\n              \\n\\n                <mat-form-field appearance=\\\"outline\\\">\\n                    <mat-label>User ID</mat-label>\\n                    <input matInput placeholder=\\\"User ID\\\" type=\\\"text\\\" formControlName=\\\"username\\\" autocomplete=\\\"off\\\">\\n                    <mat-icon matSuffix>assignment_ind</mat-icon>\\n                </mat-form-field>\\n\\n                <mat-form-field appearance=\\\"outline\\\">\\n                    <mat-label>Password</mat-label>\\n                    <input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\">\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                </mat-form-field>\\n\\n             \\n                <div class=\\\"loginactions\\\">\\n                    <a  class=\\\"forgotpassword\\\" >Forgot Password ?</a>\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"loginbtn\\\" type=\\\"submit\\\" *ngIf=\\\"loginButtonActive\\\" >Login </button>\\n                    <mat-spinner [diameter]=\\\"25\\\" style=\\\"margin:0 auto;\\\" *ngIf=\\\"loaderActive\\\"></mat-spinner>\\n                   \\n                </div>\\n\\n                <h4 class=\\\"loginerr\\\" *ngIf=\\\"invalidErr\\\">{{invalidErrMsg}}</h4>\\n\\n            </form>\\n\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  loginForm: FormGroup;\n  loginButtonActive:boolean = true;\n  loaderActive:boolean = false;\n  invalidErr:boolean = false;\n  invalidErrMsg:string = \"\";\n\n  constructor(private authService:AuthService,private router:Router) {\n\n    this.loginForm = new FormGroup({\n      username: new FormControl('',Validators.required),\n      password: new FormControl('',Validators.required)\n     \n    });\n\n   }\n\n  ngOnInit() {\n  }\n\n\n\n  onSubmit(formVal) {\n    \n    \n\n  \n    if(this.isLoginFormValid(formVal)){\n    this.loginButtonActive = false;\n    this.loaderActive = true;\n    let response;\n    this.authService.signInVerification(formVal).then(data => {\n     \n    response = data;\n    if(response.msg_status==100){\n      const user_data = response.userdata;\n      localStorage.setItem(\"token\", response.token);\n      localStorage.setItem(\"fname\", user_data.first_name);\n      localStorage.setItem(\"lname\", user_data.last_name);\n     // this.router.navigate(['/panel/registration']);\n      console.log(user_data.user_role_code);\n      if(user_data.user_role_code==\"ADMIN\"){\n        this.router.navigate(['/panel/dashboard']);\n      }\n      else if(user_data.user_role_code==\"DOC\"){\n        this.router.navigate(['/panel/todaysreg']);\n      }\n      else if(user_data.user_role_code==\"ASST\"){\n        this.router.navigate(['/panel/registration']);\n      }\n      else if(user_data.user_role_code==\"PHRM\"){\n        this.router.navigate(['/panel/prescriptionlist']);\n      }\n      else{\n        this.router.navigate(['/not-found']);\n      }\n      \n      \n      \n\n     }\n     else{\n      this.invalidErr = true;\n      this.invalidErrMsg = response.msg_data;\n      this.loginButtonActive = true;\n      this.loaderActive = false;\n\n     }\n    },\n       error => {\n        console.log(\"Error from login attempt\");\n     });\n    }\n\n\n\n\n  }\n\n  isLoginFormValid(formVal){\n    let isFormValidate:boolean = true;\n    if(formVal.username==\"\" || formVal.username == null){\n      isFormValidate = false;\n    }\n    if(formVal.password==\"\" || formVal.password == null){\n      isFormValidate = false;\n    }\n    return isFormValidate;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\nimport { AppMaterialModule } from '../app-material/app-material.module';\n\n\n@NgModule({\n    imports: \n    [CommonModule,\n        LoginRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppMaterialModule\n    ],\n    declarations: [LoginComponent]\n})\nexport class LoginModule {}\n"],"sourceRoot":""}