{"version":3,"sources":["webpack:///./src/app/layout/opdprepration/opdprepration-routing.module.ts","webpack:///./src/app/layout/opdprepration/opdprepration.component.css","webpack:///./src/app/layout/opdprepration/opdprepration.component.html","webpack:///./src/app/layout/opdprepration/opdprepration.component.ts","webpack:///./src/app/layout/opdprepration/opdprepration.module.ts","webpack:///./src/app/service/symptomdisease.service.ts"],"names":[],"mappings":"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","file":"opdprepration-opdprepration-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OpdpreprationComponent } from './opdprepration.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '', component: OpdpreprationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OpdpreprationRoutingModule { }\n","module.exports = \".patientinfo mat-toolbar {\\r\\n    background: transparent !important;\\r\\n    font-size: 0.8rem;\\r\\n    letter-spacing: 1px;\\r\\n    /* height:auto; */\\r\\n    margin-top: -2%;\\r\\n}\\r\\n\\r\\n.toplink {\\r\\n    font-size: 0.7rem;\\r\\n    /* text-decoration: underline; */\\r\\n    letter-spacing: 1px;\\r\\n    /* background: white;*/\\r\\n    margin-left: 5px;\\r\\n    border-radius: 36px;\\r\\n    border: 0px solid #d0cbcb;\\r\\n    /*color: #827979;*/\\r\\n}\\r\\n\\r\\n.block_btn {\\r\\n    font-size: 0.7rem;\\r\\n    letter-spacing: 1px;\\r\\n    background: #126adb;\\r\\n    margin-left: 5px;\\r\\n    border-radius: 4px;\\r\\n    border: 0px solid #d0cbcb;\\r\\n    color: #fff;\\r\\n    margin-bottom: 5px;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.patientinfo {\\r\\n    background: transparent;\\r\\n    padding: 0%;\\r\\n    margin-bottom: 2%;\\r\\n}\\r\\n\\r\\n.infocontainer {\\r\\n    padding: 0%;\\r\\n    background: transparent;\\r\\n    border: 0px solid #e4e7e8;\\r\\n    border-radius: 6px;\\r\\n}\\r\\n\\r\\n.mat-input-element:disabled {\\r\\n    /* color: rgba(0,0,0,.38); */\\r\\n    color: #181818;\\r\\n    font-size: 12px;\\r\\n    letter-spacing: 1px;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.prescription {\\r\\n    margin-top: -1%;\\r\\n    background: #fdfeff;\\r\\n    border: 1px solid #deeaef;\\r\\n}\\r\\n\\r\\n.mat-tab-header,\\r\\n.mat-tab-nav-bar {\\r\\n    border-bottom: 1px solid rgba(128, 123, 123, 0.12);\\r\\n}\\r\\n\\r\\n.mat-tab-label-container {\\r\\n    background: #dfe0ea !important;\\r\\n}\\r\\n\\r\\n.prescription .mat-icon {\\r\\n    padding-right: 5px;\\r\\n}\\r\\n\\r\\n.mat-tab-label-content {\\r\\n    font-size: 1px;\\r\\n    letter-spacing: 1px;\\r\\n    color: #03030a;\\r\\n}\\r\\n\\r\\n.prescription_block {\\r\\n    margin-top: 1.2%;\\r\\n}\\r\\n\\r\\n.prescription_block .mat-form-field {\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    text-align: left;\\r\\n    font-size: 13px;\\r\\n    letter-spacing: 1px;\\r\\n    \\r\\n}\\r\\n\\r\\n.mat-form-field{\\r\\n    font-size:0.8rem;\\r\\n}\\r\\n\\r\\n.blockheading {\\r\\n    letter-spacing: 1px;\\r\\n    font-size: 0.8rem;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.addicon {\\r\\n    padding: 0px 5px;\\r\\n}\\r\\n\\r\\ntd.mat-cell,\\r\\ntd.mat-footer-cell,\\r\\nth.mat-header-cell {\\r\\n    font-size: 12px;\\r\\n    letter-spacing: 1px;\\r\\n    color: #242424;\\r\\n}\\r\\n\\r\\nth.mat-header-cell {\\r\\n    padding: 2px 5px !important;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row,\\r\\ntr.mat-row {\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n.upld_actionbtn {\\r\\n    margin-bottom: 1.5%;\\r\\n}\\r\\n\\r\\n.mat-checkbox {\\r\\n    font-size: 11px;\\r\\n    letter-spacing: 1px;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.mat-tab-group {\\r\\n    font-size: 11px;\\r\\n    letter-spacing: 1px;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.phrmcybtn {\\r\\n    /* float: right; */\\r\\n    margin-left: 4%;\\r\\n    margin-right: 1%;\\r\\n    margin-top: 1%;\\r\\n    margin-bottom: 1%;\\r\\n    font-size: 0.8rem;\\r\\n}\\r\\n\\r\\n.mat-tab-labels {\\r\\n    background: #1f6fc9 !important;\\r\\n    font-size: 12px;\\r\\n    letter-spacing: 1px;\\r\\n}\\r\\n\\r\\n.mat-tab-label .mat-tab-label-content {\\r\\n    color: #FFF;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.mat-tab-label:focus {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.mat-form-field-infix {\\r\\n    width: auto !important;\\r\\n}\\r\\n\\r\\n.mat-tab-label-active {\\r\\n    background-color: #085287;\\r\\n    opacity: 1 !important;\\r\\n}\\r\\n\\r\\ntd.mat-cell:first-of-type,\\r\\ntd.mat-footer-cell:first-of-type,\\r\\nth.mat-header-cell:first-of-type {\\r\\n    padding-left: 0px !important;\\r\\n}\\r\\n\\r\\n.cutomTbl tr th {\\r\\n   /* padding: 1px 3px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #dfe0e0;\\r\\n    font-weight: 500;\\r\\n    background: transparent;*/\\r\\n    \\r\\n    padding: 3px 3px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #a2b9d7;\\r\\n    font-weight: 500;\\r\\n    background: #dcebff;\\r\\n    height: 26px;\\r\\n    padding-right: 9px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.cutomTbl tr td {\\r\\n    padding: 0px 3px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #dfe0e0;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\r\\n\\r\\n    color: #474747;\\r\\n    opacity: 1 !important;\\r\\n    font-size: 14px;\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"wraper-container\\\">\\n    <div class=\\\"search-container\\\">\\n        <mat-card>\\n\\n            <mat-card-content>\\n\\n                <section class=\\\"patientinfo\\\">\\n                    <mat-toolbar>\\n\\n                        <div style=\\\"width:100%;float: right;text-align:right;\\\">\\n                            <button mat-raised-button color=\\\"primary\\\" class=\\\"toplink\\\" (click)=\\\"gotoList()\\\">Back To List </button>\\n                            <button mat-raised-button color=\\\"warn\\\" class=\\\"toplink\\\">Prescription History</button>\\n                        </div>\\n                    </mat-toolbar>\\n                    <form [formGroup]=\\\"presciptionHealthForm\\\">\\n                        <div class=\\\"container infocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n                            <div fxFlex=\\\"20%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Patient ID\\\" formControlName=\\\"patientID\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"hdnpatientID\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"hdnregistrationID\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"hdnpresciptionID\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"20%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Pres ID\\\" formControlName=\\\"prescpID\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"20%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Type\\\" formControlName=\\\"patientType\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"20%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Patient Name\\\" formControlName=\\\"patientName\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"20%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Age\\\" formControlName=\\\"patientAge\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"container infocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Pulse\\\" formControlName=\\\"pulse\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Temp (F)\\\" formControlName=\\\"tempratute\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Anaemia\\\" formControlName=\\\"anaemia\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"BP\\\" formControlName=\\\"bp\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Jaundice\\\" formControlName=\\\"jaundice\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Odema\\\" formControlName=\\\"odema\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Height\\\" formControlName=\\\"height\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div fxFlex=\\\"15%\\\">\\n                                <mat-form-field class=\\\"fullwidthinp\\\">\\n                                    <input matInput placeholder=\\\"Weight (Kgs.)\\\" formControlName=\\\"weight\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n\\n                    </form>\\n\\n                </section>\\n\\n\\n\\n\\n                <section class=\\\"prescription\\\">\\n                    <mat-tab-group>\\n                        <mat-tab>\\n                            <ng-template mat-tab-label>\\n                                <mat-icon>assignment_turned_in </mat-icon>\\n                                General Consultation\\n                            </ng-template>\\n\\n                            <form [formGroup]=\\\"presciptionForm\\\" (ngSubmit)=\\\"onSubmit(presciptionForm.value)\\\">\\n                                <div class=\\\"container prescription_block\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n                                    <div fxFlex=\\\"55%\\\">\\n\\n\\n                                        <mat-form-field class=\\\"fullwidthinp\\\">\\n                                           <mat-select formControlName=\\\"symptomsMultiCtrl\\\" placeholder=\\\"Signs And Symptoms\\\" [multiple]=\\\"true\\\" #multiSelect (selectionChange)=\\\"getDiseaseList($event)\\\">\\n                                                <ngx-mat-select-search formControlName=\\\"symptomsMultiFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                <mat-option *ngFor=\\\"let symptom of filteredSymptomMulti | async\\\" [value]=\\\"symptom\\\" >\\n                                                    {{symptom.name}}\\n                                                </mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n\\n                                        <mat-form-field class=\\\"fullwidthinp\\\">\\n                                            <mat-select formControlName=\\\"diagnosisMultiCtrl\\\" placeholder=\\\"Diagnosis List\\\" [multiple]=\\\"true\\\" #multiSelect (selectionChange)=\\\"getMedicine($event)\\\">\\n                                                <ngx-mat-select-search formControlName=\\\"diagnosisMultiFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                <mat-option *ngFor=\\\"let diagnosis of filteredDiagnosisMulti | async\\\" [value]=\\\"diagnosis\\\">\\n                                                    {{diagnosis.name}}\\n                                                </mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n\\n\\n                                        <!--<ul *ngFor=\\\"let bank of bankMultiCtrl?.value\\\">\\n                                  <li>{{bank.name}}</li>\\n                                </ul>-->\\n\\n                                        <h4 class=\\\"blockheading\\\">Add Medicines</h4>\\n                                        <p style=\\\"color:#F00;text-align: right;\\\">{{medicineError}}</p>\\n\\n                                        <div class=\\\"add_medicines\\\">\\n                                            <!--\\n                                            <table mat-table [dataSource]=\\\"dataSource\\\" style=\\\"width:100%;\\\">\\n                                                <ng-container matColumnDef=\\\"date\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n                                                        <mat-form-field style=\\\"width: 90px;\\\">\\n                                                            <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date\\\" formControlName=\\\"date\\\">\\n                                                            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                                                            <mat-datepicker #picker1></mat-datepicker>\\n                                                        </mat-form-field>\\n                                                    </th>\\n                                                </ng-container>\\n\\n                                             \\n                                                <ng-container matColumnDef=\\\"medicine\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n\\n\\n                                                        <mat-select formControlName=\\\"medicineCtrl\\\" placeholder=\\\"Medicine\\\" #singleSelect style=\\\"width: 155px;\\\" (selectionChange)=\\\"getOtherDependent($event)\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"medicineFilterCtrl\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let medicine of filteredMedicines | async\\\" [value]=\\\"medicine\\\">\\n                                                                {{medicine.name}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n\\n                                                    </th>\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"dosage\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n\\n                                                   \\n\\n                                                        <mat-select formControlName=\\\"dosageCtrl\\\" placeholder=\\\"Dosage\\\" #singleSelect style=\\\"width: 155px;\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"dosageFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let dosage of filteredDosages | async\\\" [value]=\\\"dosage\\\">\\n                                                                {{dosage.value}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n\\n                                                    </th>\\n                                                </ng-container>\\n\\n\\n                                                <ng-container matColumnDef=\\\"unit\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n\\n                                                        <mat-select formControlName=\\\"instructionCtrl\\\" placeholder=\\\"Frequncy\\\" #singleSelect style=\\\"width: 155px;\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"instructionFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let frequency of filteredInstruction | async\\\" [value]=\\\"frequency\\\">\\n                                                                {{frequency.frequency}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n\\n                                                    </th>\\n                                                </ng-container>\\n\\n                                               \\n                                                <ng-container matColumnDef=\\\"days\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n                                                        <mat-form-field style=\\\"width:70%;\\\">\\n                                                            <input matInput placeholder=\\\"Days\\\" formControlName=\\\"daysCtrl\\\" />\\n                                                        </mat-form-field>\\n                                                    </th>\\n                                                </ng-container>\\n\\n\\n                                              \\n                                                <ng-container matColumnDef=\\\"action\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n                                                        <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"addMedicine()\\\"><mat-icon class=\\\"addicon\\\">add_circle</mat-icon></button>\\n                                                    </th>\\n                                                </ng-container>\\n\\n\\n\\n\\n                                          \\n                                                <ng-container matColumnDef=\\\"datetd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Date </th>\\n                                                    <td mat-cell *matCellDef=\\\"let datas\\\">{{datas.datetd}}</td>\\n\\n                                                </ng-container>\\n\\n                                    \\n                                                <ng-container matColumnDef=\\\"medicinetd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Medicine </th>\\n                                                    <td mat-cell *matCellDef=\\\"let datas\\\"> {{datas.medicinetd}} </td>\\n\\n                                                </ng-container>\\n\\n\\n                                              \\n                                                <ng-container matColumnDef=\\\"dosagetd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Dosage </th>\\n                                                    <td mat-cell *matCellDef=\\\"let datas\\\"> {{datas.dosagetd}} </td>\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"unittd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Frequency </th>\\n                                                    <td mat-cell *matCellDef=\\\"let datas\\\"> {{datas.unittd}} </td>\\n\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"daystd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Days </th>\\n                                                    <td mat-cell *matCellDef=\\\"let datas\\\"> {{datas.daystd}} </td>\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"actiontd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Action </th>\\n                                                    <td mat-cell *matCellDef=\\\"let datas\\\"> {{datas.actiontd}} </td>\\n\\n                                                </ng-container>\\n\\n\\n                                           \\n                                                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"example-first-header-row\\\">\\n                                                </tr>\\n                                                <tr mat-header-row *matHeaderRowDef=\\\"[ 'date', 'medicine', 'dosage', 'unit', 'days','action']\\\" class=\\\"example-second-header-row\\\">\\n                                                </tr>\\n\\n                                                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                                            </table> -->\\n\\n\\n\\n\\n                                            <!--Test Table-->\\n                                            <table style=\\\"width:100%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\n                                                <tr>\\n                                                    <!--<th>Date</th>-->\\n                                                    <th>Medicine</th>\\n                                                    <th>Dosage</th>\\n                                                    <th>Frequency</th>\\n                                                    <th>Days</th>\\n                                                    <th>Action</th>\\n\\n                                                </tr>\\n                                                <tr>\\n                                                    <!--\\n                                                    <th>\\n                                                        <mat-form-field style=\\\"width: 90px;\\\">\\n                                                            <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"\\\" formControlName=\\\"date\\\">\\n                                                            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                                                            <mat-datepicker #picker1></mat-datepicker>\\n                                                        </mat-form-field>\\n                                                    </th>-->\\n                                                    <th>\\n                                                        <mat-select formControlName=\\\"medicineCtrl\\\" placeholder=\\\"Medicine\\\" #singleSelect style=\\\"width: 155px;\\\" (selectionChange)=\\\"getOtherDependent($event)\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"medicineFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let medicine of filteredMedicines | async\\\" [value]=\\\"medicine\\\">\\n                                                                {{medicine.name}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n                                                    </th>\\n                                                    <th>\\n                                                        <mat-select formControlName=\\\"dosageCtrl\\\" placeholder=\\\"Dosage\\\" #singleSelect style=\\\"width: 155px;\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"dosageFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let dosage of filteredDosages | async\\\" [value]=\\\"dosage\\\">\\n                                                                {{dosage.value}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n\\n                                                    </th>\\n                                                    <th>\\n                                                        <mat-select formControlName=\\\"instructionCtrl\\\" placeholder=\\\"Frequncy\\\" #singleSelect style=\\\"width: 155px;\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"instructionFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let frequency of filteredInstruction | async\\\" [value]=\\\"frequency\\\">\\n                                                                {{frequency.frequency}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n                                                    </th>\\n                                                    <th>\\n                                                        <mat-form-field style=\\\"width:70%;\\\">\\n                                                            <input matInput placeholder=\\\"\\\" formControlName=\\\"daysCtrl\\\" autocomplete=\\\"off\\\" />\\n                                                        </mat-form-field>\\n                                                    </th>\\n                                                    <th>\\n                                                        <button type=\\\"button\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addMedicine()\\\"><mat-icon class=\\\"addicon\\\">add_circle</mat-icon></button>\\n                                                    </th>\\n\\n                                                </tr>\\n\\n\\n                                                <tr *ngFor=\\\"let addedmed of addedMeddata; let i = index \\\">\\n                                                    <!--<td>{{addedmed.datetd | date:'dd/MM/yyyy'}}</td>-->\\n                                                    <td>{{addedmed.medicinetd.name}}</td>\\n                                                    <td>{{addedmed.dosagetd.value}}</td>\\n                                                    <td>{{addedmed.unittd.frequency}}</td>\\n                                                    <td>{{addedmed.daystd}}</td>\\n                                                    <td>\\n                                                        <button mat-icon-button (click)=\\\"removeData(i)\\\" color=\\\"warn\\\" type=\\\"button\\\">\\n                                                                <mat-icon >clear</mat-icon>\\n                                                        </button>\\n                                                    </td>\\n\\n                                                </tr>\\n                                            </table>\\n\\n\\n                                        </div>\\n\\n\\n                                    </div>\\n\\n                                    <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\n\\n                                    <div fxFlex=\\\"40%\\\">\\n                                        <h4 class=\\\"blockheading\\\">Add Investigations/Tests</h4>\\n                                        <p style=\\\"color:#F00;text-align: right;\\\">{{testReportError}}</p>\\n                                        <div class=\\\"patient_investigation\\\">\\n\\n                                            <!--\\n                                            <table mat-table [dataSource]=\\\"transactions\\\" style=\\\"width:100%;\\\">\\n                                                <ng-container matColumnDef=\\\"date\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n                                                        <mat-form-field>\\n                                                            <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date\\\" formControlName=\\\"date\\\">\\n                                                            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                                                            <mat-datepicker #picker1></mat-datepicker>\\n                                                        </mat-form-field>\\n                                                    </th>\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"reporthead\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n                                                        <mat-select formControlName=\\\"reportsCtrl\\\" placeholder=\\\"Reports\\\" #singleSelect style=\\\"width: 155px;\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"reportsFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let bank of filteredReports | async\\\" [value]=\\\"bank\\\">\\n                                                                {{bank.name}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n                                                    </th>\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"action\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef>\\n                                                        <button mat-mini-fab color=\\\"primary\\\"><mat-icon class=\\\"addicon\\\" >add_circle</mat-icon></button>\\n                                                    </th>\\n                                                </ng-container>\\n                                                \\n                                                <ng-container matColumnDef=\\\"datetd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Date </th>\\n                                                    <td mat-cell *matCellDef=\\\"let transaction\\\"> 08-10-2018</td>\\n\\n                                                </ng-container>\\n\\n                                               \\n                                                <ng-container matColumnDef=\\\"reportdtd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Report </th>\\n                                                    <td mat-cell *matCellDef=\\\"let transaction\\\"> Calpol </td>\\n\\n                                                </ng-container>\\n\\n                                                <ng-container matColumnDef=\\\"actiontd\\\">\\n                                                    <th mat-header-cell *matHeaderCellDef> Action </th>\\n                                                    <td mat-cell *matCellDef=\\\"let transaction\\\"> </td>\\n\\n                                                </ng-container>\\n                                                \\n                                                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsReport\\\" class=\\\"example-first-header-row\\\">\\n                                                </tr>\\n                                                <tr mat-header-row *matHeaderRowDef=\\\"[ 'date', 'reporthead' , 'action']\\\" class=\\\"example-second-header-row\\\">\\n                                                </tr>\\n\\n                                                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsReport;\\\"></tr>\\n                                            </table> -->\\n\\n\\n                                            <table style=\\\"width:100%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\n                                                <tr>\\n                                                    <th>Date</th>\\n                                                    <th>Report</th>\\n                                                    <th>Action</th>\\n                                                </tr>\\n\\n                                                <tr>\\n                                                    <th style=\\\"width: 30%;\\\">\\n                                                        <mat-form-field>\\n                                                            <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"\\\" formControlName=\\\"investigationDt\\\">\\n                                                            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                                                            <mat-datepicker #picker2></mat-datepicker>\\n                                                        </mat-form-field>\\n                                                    </th>\\n\\n                                                    <th style=\\\"width: 60%;\\\">\\n                                                        <mat-select formControlName=\\\"reportsCtrl\\\" placeholder=\\\"Reports\\\" #singleSelect (selectionChange)=\\\"clearTestError($event)\\\">\\n                                                            <ngx-mat-select-search formControlName=\\\"reportsFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                            <mat-option *ngFor=\\\"let reports of filteredReports | async\\\" [value]=\\\"reports\\\">\\n                                                                {{reports.name}}\\n                                                            </mat-option>\\n                                                        </mat-select>\\n                                                    </th>\\n\\n                                                    <th style=\\\"width: 10%;\\\">\\n                                                        <button type=\\\"button\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"addInvestigation()\\\"><mat-icon class=\\\"addicon\\\" >add_circle</mat-icon></button>\\n                                                    </th>\\n\\n                                                </tr>\\n\\n                                                <tr *ngFor=\\\"let addedinv of addedInvestigations;\\\">\\n                                                    <td>{{addedinv.invdate | date:'dd/MM/yyyy' }}</td>\\n                                                    <td>{{addedinv.reports.name}}</td>\\n\\n                                                    <td>\\n                                                        <button mat-icon-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"removeMedReports(i)\\\"><mat-icon >clear</mat-icon></button>\\n                                                    </td>\\n\\n                                                </tr>\\n\\n\\n\\n                                            </table>\\n\\n                                        </div>\\n\\n\\n                                        <h4 class=\\\"blockheading\\\">Report Upload</h4>\\n\\n                                        <div class=\\\"upld_actionbtn\\\">\\n                                            <button mat-stroked-button color=\\\"primary\\\" style=\\\"margin-right:1%;\\\">\\n                                      <mat-icon>attachment</mat-icon> Upload Files \\n                                    </button>\\n                                            <button mat-stroked-button color=\\\"warn\\\">View Report</button>\\n                                        </div>\\n\\n\\n                                        <mat-form-field class=\\\"fullwidthinp\\\">\\n                                            <textarea matInput placeholder=\\\"Final Summary\\\" formControlName=\\\"finalsummryCtrl\\\"></textarea>\\n                                        </mat-form-field>\\n\\n\\n\\n\\n\\n                                        <div class=\\\"container infocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n                                            <div fxFlex=\\\"30%\\\">\\n                                                <mat-checkbox formControlName=\\\"sickCtrl\\\" (change)=\\\"enableSickDay($event)\\\" >Sick</mat-checkbox>\\n                                            </div>\\n                                            <div fxFlex=\\\"70%\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Days\\\" formControlName=\\\"sickdaysCtrl\\\" (input)=\\\"clearFormValidErr($event)\\\"/>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n\\n\\n                                        <div class=\\\"container infocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\" style=\\\"margin-top:1%;\\\">\\n                                            <div fxFlex=\\\"30%\\\">\\n                                                <mat-checkbox formControlName=\\\"approvalCtrl\\\">Accident Approval </mat-checkbox>\\n                                            </div>\\n                                            <div fxFlex=\\\"70%\\\">\\n                                                <!--\\n                                                <mat-radio-group formControlName=\\\"admobservCtrl\\\">\\n                                                    <mat-radio-button value=\\\"ADMIT\\\"> Admit&nbsp;&nbsp; </mat-radio-button>\\n                                                    <mat-radio-button value=\\\"OBSERVATION\\\"> Observation&nbsp;&nbsp; </mat-radio-button>\\n                                                </mat-radio-group>-->\\n\\n                                                <mat-checkbox formControlName=\\\"admitCtrl\\\" (change)=\\\"validateRecomChkBox($event,'ADMIT')\\\" >Admit&nbsp;&nbsp;</mat-checkbox>\\n                                                <mat-checkbox formControlName=\\\"observCtrl\\\" (change)=\\\"validateRecomChkBox($event,'OBSERVATION')\\\" >Observation</mat-checkbox>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"container infocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n                                            <div fxFlex=\\\"30%\\\">\\n                                                <mat-checkbox formControlName=\\\"isReffHospital\\\"  (change)=\\\"enableReffHospital($event)\\\">Reffer Hospital</mat-checkbox>\\n                                            </div>\\n                                            <div fxFlex=\\\"70%\\\">\\n                                                <mat-form-field style=\\\"width:100%;\\\">\\n                                                    <mat-select formControlName=\\\"reffHospitalCtrl\\\" placeholder=\\\"\\\" #singleSelect>\\n                                                        <ngx-mat-select-search formControlName=\\\"reffHospitalFilterCtrl\\\" [placeholderLabel]=\\\"'Search'\\\" [noEntriesFoundLabel]=\\\"'no records found'\\\"></ngx-mat-select-search>\\n                                                        <mat-option *ngFor=\\\"let reports of filteredHospitals | async\\\" [value]=\\\"reports\\\">\\n                                                            {{reports.name}}\\n                                                        </mat-option>\\n                                                    </mat-select>\\n                                                    </mat-form-field>\\n                                            </div>\\n                                        </div>\\n\\n\\n\\n                                    </div>\\n                                </div>\\n                              \\n                                <div class=\\\"container infocontainer\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\" style=\\\"padding-bottom: 2%;\\\">\\n                                    \\n                                    <div fxFlex=\\\"80%\\\"></div>\\n                                    <div fxFlex=\\\"20%\\\">\\n                                        <p style=\\\"color:#F00;text-align: right;padding-right: 10px;\\\">{{validFormErr}}</p>\\n                                        <button mat-flat-button color=\\\"warn\\\" class=\\\"\\\" type=\\\"button\\\" (click)=\\\"resetPresForm();\\\">+ New</button>\\n                                        <button mat-flat-button color=\\\"primary\\\" class=\\\"phrmcybtn\\\" type=\\\"submit\\\" *ngIf=\\\"sendPhrmcyBtnActive\\\" >Send To Pharmacy</button>\\n                                       \\n                                        <button mat-flat-button color=\\\"default\\\" class=\\\"phrmcybtn\\\" *ngIf=\\\"!sendPhrmcyBtnActive\\\" style=\\\"vertical-align: middle;padding: 4px 0;\\\" type=\\\"button\\\">\\n                                            <mat-spinner [diameter]=\\\"25\\\" color=\\\"primary\\\" ></mat-spinner>\\n                                          </button>\\n                                    </div>\\n                                </div>\\n\\n                            </form>\\n\\n\\n                    \\n                        </mat-tab>\\n\\n                        <mat-tab>\\n                            <ng-template mat-tab-label>\\n                                <mat-icon>face</mat-icon>\\n                                Pregnancy\\n                            </ng-template>\\n                            Content 2\\n                        </mat-tab>\\n\\n                        <mat-tab>\\n                            <ng-template mat-tab-label>\\n                                <mat-icon>note_add</mat-icon>\\n                                Vaccination\\n                            </ng-template>\\n                            Content 3\\n                        </mat-tab>\\n\\n\\n                    </mat-tab-group>\\n                </section>\\n\\n\\n\\n\\n\\n            </mat-card-content>\\n        </mat-card>\\n\\n    </div>\\n    <!--end of search container-->\\n</div>\\n\\n\\n\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild , ViewEncapsulation } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\nimport { MatSelect, VERSION } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CommonService } from './../../service/common.service';\nimport { SymptomdiseaseService } from './../../service/symptomdisease.service';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { DatashareService } from './../../service/datashare.service';\nimport { PatientService } from './../../service/patient.service';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA , MatDialogConfig} from '@angular/material';\nimport { SuccessdialogComponent } from '../components/successdialog/successdialog.component';\nimport { INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic/src/platform_providers';\n\n\n\n\n  export interface Transaction {\n    item: string;\n    cost: number;\n  }\n\n\n  export interface PeriodicElement {\n    name: string;\n    position: any;\n    weight: any;\n    symbol: string;\n  }\n\n\n  interface Symptoms{\n    id: string,\n    name: string\n  }\n\n  interface Diagnosis{\n    id: string,\n    name: string\n  }\n\n  interface Medicine{\n    id: string,\n    name: string,\n    type: string\n  }\n\n  interface Dosage{\n    id: string,\n    value: string,\n  }\n\n  interface Frequency{\n    id: string,\n    frequency: string,\n  }\n\n  interface Relation{\n    id: string;\n    name: string;\n  }\n\n  interface Instruction{\n    id: string;\n    name: string;\n  }\n\n  interface Reports{\n    id: string;\n    name: string;\n  }\n\n  interface Hospitals{\n    id: any;\n    name: any;\n  }\n\n  export interface addedMedicineData {\n    datetd:any;\n    medicinetd:any;\n    dosagetd:any;\n    unittd:any;\n    daystd:any;\n    actiontd:any;\n  }\n\n@Component({\n  selector: 'app-opdprepration',\n  templateUrl: './opdprepration.component.html',\n  styleUrls: ['./opdprepration.component.css'],\n   encapsulation: ViewEncapsulation.None\n   \n})\nexport class OpdpreprationComponent implements OnInit, OnDestroy {\n\n\n\n  patientData ;\n  PatientID = null;\n  PatientName = null;\n  PatientType = null;\n  PatientAge = null;\n\n  medicineError:string = \"\";\n  testReportError:string = \"\";\n  validFormErr:string = \"\";\n  lastPresciptionID:number = 0;\n  \n\n  displayedColumns: string[] = [ 'datetd' , 'medicinetd' , 'dosagetd' , 'unittd', 'daystd' , 'actiontd'];\n  \n  dataSource = [];\n\n  displayedColumnsReport: string[] = [ 'datetd' , 'reportdtd', 'actiontd'];\n  \n  addedMeddata = [];\n  addedInvestigations = [];\n\n  patientObj;\n  presciptionHealthForm : FormGroup;\n  presciptionForm : FormGroup;\n  sendPhrmcyBtnActive = true;\n  localStrgPcode = \"\";\n  localStrgRid;\n\n    constructor(private router:Router, private commonService:CommonService, private symptomdiseaseService:SymptomdiseaseService , private datashareService:DatashareService , private patientService:PatientService , public dialog: MatDialog) {\n   \n      this.presciptionForm = new FormGroup({\n        symptomsMultiCtrl: new FormControl(''),\n        symptomsMultiFilterCtrl: new FormControl(''),\n        diagnosisMultiCtrl: new FormControl(''),\n        diagnosisMultiFilterCtrl: new FormControl(''),\n    //    date: new FormControl(new Date().toISOString()),\n        medicineCtrl: new FormControl(''),\n        medicineFilterCtrl: new FormControl(''),\n        dosageCtrl: new FormControl(''),\n        dosageFilterCtrl: new FormControl(''),\n        instructionCtrl: new FormControl(''),\n        instructionFilterCtrl: new FormControl(''),\n        investigationDt: new FormControl(new Date().toISOString()),\n        reportsCtrl: new FormControl(''),\n        reportsFilterCtrl: new FormControl(''),\n        daysCtrl: new FormControl(''),\n        finalsummryCtrl: new FormControl(''),\n        sickCtrl: new FormControl(''),\n        sickdaysCtrl: new FormControl({value: '', disabled: true}),\n        approvalCtrl: new FormControl(''),\n        admitCtrl: new FormControl(''),\n        observCtrl: new FormControl(''),\n        isReffHospital: new FormControl(''),\n        reffHospitalCtrl: new FormControl({value: '', disabled: true}),\n        reffHospitalFilterCtrl: new FormControl('')\n      });\n\n      this.presciptionHealthForm = new FormGroup({\n        hdnpatientID: new FormControl(''),\n        hdnregistrationID: new FormControl(''),\n        hdnpresciptionID: new FormControl(''),\n        patientID: new FormControl({value: '', disabled: true}),\n        prescpID: new FormControl({value: '', disabled: true}),\n        patientType: new FormControl({value: '', disabled: true}),\n        patientName: new FormControl({value: '', disabled: true}),\n        patientAge: new FormControl({value: '', disabled: true}),\n        pulse: new FormControl(''),\n        tempratute: new FormControl(''),\n        anaemia: new FormControl(''),\n        bp: new FormControl(''),\n        jaundice: new FormControl(''),\n        odema: new FormControl(''),\n        height: new FormControl(''),\n        weight: new FormControl('')\n      \n      });\n\n    this.patientObj = this.datashareService.getData();\n    if(this.patientObj){\n      localStorage.setItem(\"tpcd\", this.patientObj.patient_code);\n      localStorage.setItem(\"regid\", this.patientObj.registration_id);\n    }\n   \n    this.localStrgPcode = localStorage.getItem(\"tpcd\");\n    this.localStrgRid = localStorage.getItem(\"regid\");\n\n   \n      \n\n    }\n\n\n\n    version = VERSION;\n \n    private relations: Relation[] = [];\n    private symptoms: Symptoms[] = [];\n    private diagnosis: Diagnosis[] = [];\n    private medicines: Medicine[] = [];\n    private dosages: Dosage[] = [];\n    private frequency: Frequency[] = [];\n\n    instructions: Instruction[] = [];\n\n\n    medreports: Reports[] = [];\n    refferHospitals: Hospitals[] = [];\n\n\n    public filteredMedicines: ReplaySubject<Medicine[]> = new ReplaySubject<Medicine[]>(1);\n    public filteredDosages: ReplaySubject<Dosage[]> = new ReplaySubject<Dosage[]>(1);\n    public filteredFrequency: ReplaySubject<Frequency[]> = new ReplaySubject<Frequency[]>(1);\n\n    public filterRelations: ReplaySubject<Relation[]> = new ReplaySubject<Relation[]>(1);\n    public filteredRelationsMulti: ReplaySubject<Relation[]> = new ReplaySubject<Relation[]>(1);\n\n    public filteredInstruction: ReplaySubject<Frequency[]> = new ReplaySubject<Frequency[]>(1);\n    public filteredReports: ReplaySubject<Reports[]> = new ReplaySubject<Reports[]>(1);\n    public filteredHospitals: ReplaySubject<Hospitals[]> = new ReplaySubject<Hospitals[]>(1);\n    \n\n\n    public filterSymptom: ReplaySubject<Symptoms[]> = new ReplaySubject<Symptoms[]>(1);\n    public filteredSymptomMulti: ReplaySubject<Symptoms[]> = new ReplaySubject<Symptoms[]>(1);\n\n    public filterDiagnosis: ReplaySubject<Diagnosis[]> = new ReplaySubject<Diagnosis[]>(1);\n    public filteredDiagnosisMulti: ReplaySubject<Diagnosis[]> = new ReplaySubject<Diagnosis[]>(1);\n\n\n\n\n  \n    @ViewChild('singleSelect') singleSelect: MatSelect; \n    @ViewChild('multiSelect') multiSelect: MatSelect;\n  \n    /** Subject that emits when the component has been destroyed. */\n    private _onDestroy = new Subject<void>();\n  \n    ngOnInit() {\n\n      this.getSymptoms();\n      this.filteredSymptomMulti.next(this.symptoms.slice());\n      this.presciptionForm.get('symptomsMultiFilterCtrl').valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterSymptomsMulti();\n      });\n\n\n      \n      this.getIvestigations();\n      this.filteredReports.next(this.medreports.slice());\n      this.presciptionForm.get('reportsFilterCtrl').valueChanges\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(() => {\n          this.filterMedReports();\n        });\n\n      this.getHospitals();\n      this.filteredHospitals.next(this.refferHospitals.slice());\n      this.presciptionForm.get('reffHospitalFilterCtrl').valueChanges\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(() => {\n          this.filterHospital();\n        });\n\n\n      let response;\n      let pdata;\n      let symptomlist;\n      let diagnosislist;\n      let medicinedata;\n      let reportdata;\n\n      this.patientService.getPatientByCode(this.localStrgPcode).then(data => {\n        response = data;\n        if(response.msg_status==200) {\n          pdata = response.result ; \n          symptomlist = response.symptomsInfo;\n          diagnosislist = response.diseaseInfo;\n          medicinedata = response.medicineInfo;\n          reportdata = response.reportsInfo;\n\n          this.presciptionHealthForm.patchValue({\n            hdnpatientID: pdata.patient_code,\n            hdnregistrationID: this.localStrgRid,\n            hdnpresciptionID:pdata.prescription_addmission_id,\n            patientID: pdata.patient_code,\n            prescpID: response.prescriptionID,\n            patientType: pdata.patient_type,\n            patientName: pdata.patient_name,\n            patientAge: response.age,\n            pulse: pdata.pulse,\n            tempratute: pdata.temp,\n            anaemia: pdata.anemia,\n            bp: pdata.bp,\n            jaundice: pdata.jaundice,\n            odema: pdata.odema,\n            height: pdata.height,\n            weight: pdata.weight\n        });\n\n\n        const sickCtrlStatus = pdata.sick_flag == 'Y'  ? true : false;\n        if(pdata.sick_flag == 'Y'){\n          this.presciptionForm.controls['sickdaysCtrl'].enable();\n\n        }\n        const accidental_approval = pdata.accidental_approval == 1  ? true : false;\n        const keepObserv = pdata.keep_in_observation == 1  ? true : false;\n        const isAdmit = pdata.keep_in_observation == 0  ? true : false;\n        const isreferal = pdata.hospital_rec_flag == 1  ? true : false;\n\n        if(isreferal){\n          this.presciptionForm.controls['reffHospitalCtrl'].enable(); \n        }\n\n        this.presciptionForm.patchValue({\n          finalsummryCtrl: pdata.comments,\n          sickCtrl: sickCtrlStatus,\n          sickdaysCtrl : pdata.no_of_days_sick,\n          approvalCtrl : accidental_approval,\n          observCtrl : keepObserv,\n          admitCtrl : isAdmit ,\n          isReffHospital : isreferal\n        });\n\n        \n\n \n        const count1 = Object.keys(symptomlist).length;\n        if(count1 > 0) {\n            let resultObj1;\n            for(let i = 0; i<count1; i++){\n            resultObj1 = {\n                'name':symptomlist[i].symptom,\n                'id': symptomlist[i].symptom_id\n            }\n            this.symptoms.push(resultObj1);\n            }\n            this.presciptionForm.get(\"symptomsMultiCtrl\").setValue(this.symptoms);\n        }\n        \n\n        const count2 = Object.keys(diagnosislist).length;\n        if(count2 > 0 ){\n            let resultObj2;\n            for(let i = 0; i<count2; i++){\n            resultObj2 = {\n                'name':diagnosislist[i].diagonosis_name,\n                'id': diagnosislist[i].diagonosis_id\n            }\n            this.diagnosis.push(resultObj2);\n            }\n            this.filteredDiagnosisMulti.next(this.diagnosis.slice());\n            this.presciptionForm.get(\"diagnosisMultiCtrl\").setValue(this.diagnosis);\n            let medicinObj = {\n              \"value\" : this.diagnosis\n            }\n            this.getMedicine(medicinObj);\n           \n        }\n\n        const count3 = Object.keys(medicinedata).length;\n        if(count3 >0 ){\n          let resultObj3_medicine;\n          let resultObj4_dosage;\n          let resultObj5_frequency;\n          for(let i = 0; i<count3; i++){\n\n          resultObj3_medicine = {\n              'id' : medicinedata[i].medicine_id,\n              'name' : medicinedata[i].medicine_name,\n              'type' : ''\n          }\n          \n          resultObj4_dosage = {\n            'id' : medicinedata[i].dose_id,\n            'value' : medicinedata[i].value\n            \n          }\n\n          resultObj5_frequency = {\n            'id' : medicinedata[i].dose_id,\n            'frequency' : medicinedata[i].frequency_name\n          }\n\n          const forDays = medicinedata[i].number_of_days_sick_leave ; \n\n          let data = {medicinetd:resultObj3_medicine, dosagetd:resultObj4_dosage, unittd: resultObj5_frequency , daystd:forDays , actiontd: 'x' };\n          this.addedMeddata.push(data);\n\n          }\n\n          \n        \n        }\n\n        const count4 = Object.keys(reportdata).length;\n          if(count4 > 0){\n            let resultObj6_Reports;\n            for(let i = 0; i<count4; i++) {\n              resultObj6_Reports = {\n                'id' : reportdata[i].test_id,\n                'name' : reportdata[i].investigation_name\n              }\n              const reportdate = reportdata[i].date;\n              let data = {invdate: reportdate, reports:resultObj6_Reports, action: 'x' };\n              this.addedInvestigations.push(data);\n            }\n          }\n\n        let referalHosp_Obj = {\n          \"id\" : pdata.referal_hospital_id,\n          \"name\" : pdata.hospital_name\n        }\n        this.refferHospitals.push(referalHosp_Obj);\n       \n        this.presciptionForm.get(\"reffHospitalCtrl\").setValue(this.refferHospitals[0]);\n\n\n        /*\n        let data = {medicinetd:'fd', dosagetd:\"dgf\", unittd: 4 , daystd:15 , actiontd: 'x' };\n        th is.addedMeddata.push(data);\n        */     \n    }\n      else{\n         \n        }\n       },\n\n       error => {\n           console.log(\"There is some error on submitting...\");\n       });\n\n    }\n\n    \n  \n    validateRecomChkBox(event,tag){\n      if(tag == \"ADMIT\"){\n        this.presciptionForm.patchValue({\n          observCtrl: false\n         });\n      }\n      if(tag == \"OBSERVATION\"){\n        this.presciptionForm.patchValue({\n          admitCtrl: false\n         });\n      }\n    }\n\n    enableSickDay(event){\n      if(event.checked){\n      \n        this.presciptionForm.controls['sickdaysCtrl'].enable(); \n      }\n      else{\n        this.presciptionForm.patchValue({\n          sickdaysCtrl: ''\n        });\n        this.presciptionForm.controls['sickdaysCtrl'].disable(); \n      }\n    }\n\n    enableReffHospital(event){\n      if(event.checked){\n      \n        this.presciptionForm.controls['reffHospitalCtrl'].enable(); \n      }\n      else{\n        this.presciptionForm.patchValue({\n          reffHospitalCtrl: ''\n        });\n        this.presciptionForm.controls['reffHospitalCtrl'].disable(); \n      }\n    }\n  \n    ngOnDestroy() {\n      this._onDestroy.next();\n      this._onDestroy.complete();\n    }\n  \n   \n  \n  private filterSymptomsMulti() {\n      if (!this.symptoms) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('symptomsMultiFilterCtrl').value;\n      if (!search) {\n        this.filteredSymptomMulti.next(this.symptoms.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredSymptomMulti.next(\n        this.symptoms.filter(symptom => symptom.name.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n    private filterDiagnosisMulti() {\n      if (!this.diagnosis) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('diagnosisMultiFilterCtrl').value;\n      if (!search) {\n        this.filteredDiagnosisMulti.next(this.diagnosis.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredDiagnosisMulti.next(\n        this.diagnosis.filter(diagnos => diagnos.name.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n\n    private filterMedicines() {\n      if (!this.medicines) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('medicineFilterCtrl').value;\n      if (!search) {\n        this.filteredMedicines.next(this.medicines.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredMedicines.next(\n        this.medicines.filter(medicine => medicine.name.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n    \n    private filterDosage() {\n      if (!this.dosages) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('dosageFilterCtrl').value;\n      if (!search) {\n        this.filteredDosages.next(this.dosages.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredDosages.next(\n        this.dosages.filter(dosages => dosages.value.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n\n\n    private filterInstruction() {\n      if (!this.frequency) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('instructionFilterCtrl').value;\n      if (!search) {\n        this.filteredInstruction.next(this.frequency.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredInstruction.next(\n        this.frequency.filter(frequency => frequency.frequency.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n    private filterMedReports() {\n      if (!this.medreports) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('reportsFilterCtrl').value;\n      if (!search) {\n        this.filteredReports.next(this.medreports.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredReports.next(\n        this.medreports.filter(medreport => medreport.name.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n    private  filterHospital(){\n      if (!this.refferHospitals) {\n        return;\n      }\n      // get the search keyword\n      let search =  this.presciptionForm.get('reffHospitalFilterCtrl').value;\n      if (!search) {\n        this.filteredHospitals.next(this.refferHospitals.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      }\n      // filter the banks\n      this.filteredHospitals.next(\n        this.refferHospitals.filter(reffhospital => reffhospital.name.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n\n    addMedicine() {\n      this.medicineError = \"\";\n      //let date = this.presciptionForm.get('date').value;\n      let medicine = this.presciptionForm.get('medicineCtrl').value;\n      let dosage = this.presciptionForm.get('dosageCtrl').value;\n      let frequency = this.presciptionForm.get('instructionCtrl').value;\n      let days = this.presciptionForm.get('daysCtrl').value;\n      \n      if(medicine == \"\"){\n        this.medicineError = \"Error : Select Medicine\";\n      }\n      else{\n        //let data = {datetd: date, medicinetd:medicine, dosagetd:dosage, unittd: frequency , daystd:days , actiontd: 'x' };\n        let data = {medicinetd:medicine, dosagetd:dosage, unittd: frequency , daystd:days , actiontd: 'x' };\n        this.addedMeddata.push(data);\n    \n        this.presciptionForm.patchValue({\n          medicineCtrl:'',\n          dosageCtrl:'',\n          instructionCtrl:'',\n          daysCtrl:''\n        });\n    \n      }\n      \n    \n  \n  }\n\n  addInvestigation(){\n    this.testReportError = \"\";\n    let date = this.presciptionForm.get('investigationDt').value;\n    let report = this.presciptionForm.get('reportsCtrl').value;\n\n    if(report==\"\"){\n      this.testReportError = \"Error : Select at least one test\";\n    }\n    else{\n      let data = {invdate: date, reports:report, action: 'x' };\n      this.addedInvestigations.push(data);\n\n      this.presciptionForm.patchValue({\n        reportsCtrl:''\n      });\n\n    }\n  }\n\n  removeData(i){\n    this.addedMeddata.splice(i, 1);\n  }\n\n  removeMedReports(i){\n    this.addedInvestigations.splice(i, 1);\n  }\n\n    onSubmit(){\n     /*console.log(this.presciptionForm.value);\n     console.log(this.addedMeddata);\n     console.log(this.addedInvestigations);\n     console.log(this.presciptionHealthForm.value);*/\n      \n    if(this.validatePresciptionForm()) {\n\n      this.sendPhrmcyBtnActive = false;\n      let response;\n      this.symptomdiseaseService.insertToOPD(this.presciptionHealthForm.value,this.presciptionForm.value,this.addedMeddata,this.addedInvestigations).then(data => {\n        response = data;\n          this.sendPhrmcyBtnActive = true;\n        if(response.msg_status == 200) {\n          this.openDialog();\n          localStorage.removeItem(\"tpcd\");\n          localStorage.removeItem(\"regid\");\n        }\n        else{\n       \n        }\n       },\n         error => {\n           console.log(\"There is some error on submitting...\");\n       });\n    }\n\n\n    }\n\n    validatePresciptionForm(){\n      this.validFormErr = \"\";\n      let validForm = false;\n      if(this.presciptionForm.controls['sickCtrl'].value && this.presciptionForm.controls['sickdaysCtrl'].value <= 0){\n            this.validFormErr = \"Error : Sick Days must be greater than 0\";\n            validForm = false;\n      }\n      validForm = true;\n      return validForm;\n    }\n\n    resetPresForm(){\n     \n     // this.presciptionForm.reset();\n      this.presciptionForm.patchValue({\n        symptomsMultiCtrl: '',\n        symptomsMultiFilterCtrl: '',\n        diagnosisMultiCtrl: '',\n        diagnosisMultiFilterCtrl: '',\n      //  date: new Date().toISOString(),\n        medicineCtrl: '',\n        medicineFilterCtrl: '',\n        dosageCtrl: '',\n        dosageFilterCtrl: '',\n        instructionCtrl: '',\n        instructionFilterCtrl: '',\n        investigationDt: new Date().toISOString(),\n        reportsCtrl: '',\n        reportsFilterCtrl: '',\n        daysCtrl: '',\n        finalsummryCtrl: '',\n        sickCtrl: '',\n        sickdaysCtrl: '', \n        approvalCtrl: '',\n        admitCtrl: '',\n        observCtrl: '',\n        isReffHospital: '',\n        reffHospitalCtrl: '',\n        reffHospitalFilterCtrl: ''\n      });\n\n      this.addedMeddata = [];\n      this.addedInvestigations = [];\n    }\n\n    clearFormValidErr(event){\n      this.validFormErr = \"\";\n    }\n    \n\n\n    getIvestigations(){\n      let dataval;\n      let reportlist;\n      this.symptomdiseaseService.getInvestigations().then(data => {\n        dataval = data;\n        reportlist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'name':dataval.result[i].investigation_name,\n                      'id': dataval.result[i].investigation_id\n                  }\n                  this.medreports.push(resultObj);\n              }\n              this.filteredReports.next(this.medreports.slice());\n\n               \n      },\n      error => {\n       console.log(\"There is some error in Investigation List...\");\n     });\n    }\n\n    getHospitals(){\n      let dataval;\n      let hospitallist;\n      this.commonService.getHospitals().then(data => {\n        dataval = data;\n        hospitallist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'name':dataval.result[i].hospital_name,\n                      'id': dataval.result[i].hospital_id\n                  }\n                  this.refferHospitals.push(resultObj);\n              }\n              this.filteredHospitals.next(this.refferHospitals.slice());\n\n               \n      },\n      error => {\n       console.log(\"There is some error in Investigation List...\");\n     });\n    }\n\n\n    getSymptoms(){\n      let dataval;\n      let symptomlist;\n      this.symptomdiseaseService.getSymptoms().then(data => {\n        dataval = data;\n        symptomlist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'name':dataval.result[i].symptom,\n                      'id': dataval.result[i].symptom_id\n                  }\n                  this.symptoms.push(resultObj);\n                  \n              }\n              this.filteredSymptomMulti.next(this.symptoms.slice());\n              //this.presciptionForm.get(\"symptomsMultiCtrl\").setValue([this.symptoms[0],this.symptoms[1]]);\n            \n            \n\n               \n      },\n      error => {\n       console.log(\"There is some error in Relation List...\");\n     });\n    }\n\n\n    getDiseaseList(obj){\n     \n      let dataval;\n      let diagnosislist;\n      this.diagnosis = [];\n      this.symptomdiseaseService.getDiseasesBySymptom(obj.value).then(data => {\n        dataval = data;\n        diagnosislist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'name':dataval.result[i].diagonosis_name,\n                      'id': dataval.result[i].diagonosis_id\t\n                  }\n                  this.diagnosis.push(resultObj);\n              }\n              this.filteredDiagnosisMulti.next(this.diagnosis.slice());\n              this.presciptionForm.get('diagnosisMultiFilterCtrl').valueChanges\n              .pipe(takeUntil(this._onDestroy))\n              .subscribe(() => {\n                this.filterDiagnosisMulti();\n              });\n\n               \n      },\n      error => {\n       console.log(\"There is some error in Diagnosis List...\");\n     });\n    }\n\n    getMedicine(obj){\n      let dataval;\n      let medicinelist;\n      this.medicines = [];\n      this.symptomdiseaseService.getMedicineByDisease(obj.value).then(data => {\n        dataval = data;\n        medicinelist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'name':dataval.result[i].medicine_name,\n                      'id': dataval.result[i].medicine_id\t,\n                      'type' : dataval.result[i].medicine_type\n                  }\n                  this.medicines.push(resultObj);\n              }\n             \n      this.filteredMedicines.next(this.medicines.slice());\n      this.presciptionForm.get('medicineFilterCtrl').valueChanges\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(() => {\n          this.filterMedicines();\n        });\n\n               \n      },\n      error => {\n       console.log(\"There is some error in Medicine List...\");\n     });\n    }\n\n    clearTestError(obj){\n      this.testReportError = \"\";\n    }\n\n    getOtherDependent(obj){\n      this.medicineError = \"\";\n      this.getDosage(obj);\n      this.getFrequency(obj);\n    }\n\n    getDosage(obj){\n      let dataval;\n      let dosagelist;\n      this.dosages = [];\n      this.symptomdiseaseService.getDosageByMedicine(obj.value).then(data => {\n        dataval = data;\n        dosagelist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'id': dataval.result[i].dosage_id\t,\n                      'value' : dataval.result[i].value\n                  }\n                  this.dosages.push(resultObj);\n              }\n             \n      this.filteredDosages.next(this.dosages.slice());\n      this.presciptionForm.get('dosageFilterCtrl').valueChanges\n        .pipe(takeUntil(this._onDestroy))\n        .subscribe(() => {\n          this.filterDosage();\n        });\n\n               \n      },\n      error => {\n       console.log(\"There is some error in Dosage List...\");\n     });\n    }\n\n\n    getFrequency(obj){\n      let dataval;\n      let frequencylist;\n      this.frequency = [];\n      this.symptomdiseaseService.getFrequencyByMedicine(obj.value).then(data => {\n        dataval = data;\n        frequencylist = dataval.result;\n        var count = Object.keys(dataval.result).length;\n                 let resultObj;\n                 for(let i = 0; i<count; i++){\n                  resultObj = {\n                      'id': dataval.result[i].frequency_master_id\t,\n                      'frequency' : dataval.result[i].frequency\n                  }\n                  this.frequency.push(resultObj);\n              }\n             \n              this.filteredInstruction.next(this.frequency.slice());\n              this.presciptionForm.get('instructionFilterCtrl').valueChanges\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe(() => {\n                  this.filterInstruction();\n                });\n               \n      },\n      error => {\n       console.log(\"There is some error in Frequency List...\");\n     });\n    }\n\n\n\n\n    gotoList(){\n      this.router.navigateByUrl('panel/todaysreg');\n    }\n\n    openDialog() {\n      const dialogRef = this.dialog.open(SuccessdialogComponent, {\n        width: '350px',\n        disableClose: true,\n        data:  {\n          msg : 'OPD Saved Successfully',\n          msgicon : 'check_circle',\n          iconcolor: '#1d8c3d',\n          btnurl : 'panel/todaysreg'\n          }\n      });\n    \n      dialogRef.afterClosed().subscribe(result => {\n      \n      });\n    }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { AppMaterialModule } from '../../app-material/app-material.module';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\nimport { OpdpreprationRoutingModule } from './opdprepration-routing.module';\nimport { OpdpreprationComponent } from './opdprepration.component';\nimport { SuccessdialogComponent } from '../components/successdialog/successdialog.component';\n\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OpdpreprationRoutingModule,\n    AppMaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n    \n    \n  ],\n  providers:[],\n  declarations: [OpdpreprationComponent,SuccessdialogComponent],\n  entryComponents : [SuccessdialogComponent]\n})\nexport class OpdpreprationModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GlobalconstantService } from './globalconstant.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SymptomdiseaseService {\n\n  constructor(public http: HttpClient,private global:GlobalconstantService) {}\n\n  getInvestigations() {\n    return new Promise(resolve => {\n       this.http.get(this.global.investigationlist_URL).subscribe(data => {\n         resolve(data);\n       }, err => {\n         console.log(err);\n       });\n    });\n  }\n\n  getSymptoms() {\n    return new Promise(resolve => {\n       this.http.get(this.global.symptomlist_URL).subscribe(data => {\n         resolve(data);\n       }, err => {\n         console.log(err);\n       });\n    });\n  }\n\n  getDiseasesBySymptom(symptoms){\n    let datas = JSON.stringify({symptom:symptoms});\n    return new Promise(resolve => {\n      this.http.post(this.global.diseaselist_URL,datas).subscribe(data => {\n        resolve(data);\n      }, err => {\n        console.log(err);\n      });\n   });\n  }\n\n  getMedicineByDisease(medicine){\n    let datas = JSON.stringify({medicine:medicine});\n    return new Promise(resolve => {\n      this.http.post(this.global.medicinelist_URL,datas).subscribe(data => {\n        resolve(data);\n      }, err => {\n        console.log(err);\n      });\n   });\n  }\n\n\n  getDosageByMedicine(medicine){\n    let datas = JSON.stringify({medicine:medicine});\n    return new Promise(resolve => {\n      this.http.post(this.global.dosageByMedlist_URL,datas).subscribe(data => {\n        resolve(data);\n      }, err => {\n        console.log(err);\n      });\n   });\n  }\n\n  getFrequencyByMedicine(medicine){\n    let datas = JSON.stringify({medicine:medicine});\n    return new Promise(resolve => {\n      this.http.post(this.global.frequencyByMedlist_URL,datas).subscribe(data => {\n        resolve(data);\n      }, err => {\n        console.log(err);\n      });\n   });\n  }\n\n\n  insertToOPD(healthprofile,opdform,medicines,reports){\n    let datas = JSON.stringify({healthprofile:healthprofile,opdform:opdform,medicines:medicines,reports:reports});\n    return new Promise(resolve => {\n      this.http.post(this.global.insertOPD_URL,datas).subscribe(data => {\n        resolve(data);\n      }, err => {\n        console.log(err);\n      });\n   });\n  }\n\n}\n"],"sourceRoot":""}