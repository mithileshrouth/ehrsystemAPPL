{"version":3,"sources":["webpack:///./src/app/layout/components/dialog/okdialog/okdialog.component.css","webpack:///./src/app/layout/components/dialog/okdialog/okdialog.component.html","webpack:///./src/app/layout/components/dialog/okdialog/okdialog.component.ts","webpack:///./src/app/layout/components/header/header.component.html","webpack:///./src/app/layout/components/header/header.component.scss","webpack:///./src/app/layout/components/header/header.component.ts","webpack:///./src/app/layout/components/sidebar/sidebar.component.html","webpack:///./src/app/layout/components/sidebar/sidebar.component.scss","webpack:///./src/app/layout/components/sidebar/sidebar.component.ts","webpack:///./src/app/layout/layout-routing.module.ts","webpack:///./src/app/layout/layout.component.html","webpack:///./src/app/layout/layout.component.scss","webpack:///./src/app/layout/layout.component.ts","webpack:///./src/app/layout/layout.module.ts","webpack:///./src/app/service/common.service.ts"],"names":[],"mappings":"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","file":"layout-layout-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<p>\\n  okdialog works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-okdialog',\n  templateUrl: './okdialog.component.html',\n  styleUrls: ['./okdialog.component.css']\n})\nexport class OkdialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  \\r\\n    <mat-sidenav-content>\\r\\n      <mat-toolbar color=\\\"primary\\\">\\r\\n       \\r\\n        <span class=\\\"fill-remaining-space\\\">\\r\\n           \\r\\n          <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"true\\\">\\r\\n            <button mat-menu-item>\\r\\n              <mat-icon>home</mat-icon>\\r\\n              <span>Home</span>\\r\\n            </button>\\r\\n            <button mat-menu-item>\\r\\n              <mat-icon>people_outline</mat-icon>\\r\\n              <span>Connecting</span>\\r\\n            </button>\\r\\n            <button mat-menu-item>\\r\\n              <mat-icon>videocam</mat-icon>\\r\\n              <span>Let's talk</span>\\r\\n            </button>\\r\\n            <button mat-menu-item>\\r\\n              <mat-icon>exit_to_app</mat-icon>\\r\\n              <span>Logout</span>\\r\\n            </button>\\r\\n          </mat-menu>\\r\\n        </span>\\r\\n        <span class=\\\"fill-remaining-space\\\">Application Title</span>\\r\\n      \\r\\n         <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <mat-icon>more_vert</mat-icon>\\r\\n          </button>\\r\\n      </mat-toolbar>\\r\\n     \\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n  \"","module.exports = \":host .navbar {\\n  background-color: #222; }\\n  :host .navbar .navbar-brand {\\n    color: #fff; }\\n  :host .navbar .nav-item > a {\\n    color: #999; }\\n  :host .navbar .nav-item > a:hover {\\n      color: #fff; }\\n  :host .messages {\\n  width: 300px; }\\n  :host .messages .media {\\n    border-bottom: 1px solid #ddd;\\n    padding: 5px 10px; }\\n  :host .messages .media:last-child {\\n      border-bottom: none; }\\n  :host .messages .media-body h5 {\\n    font-size: 13px;\\n    font-weight: 600; }\\n  :host .messages .media-body .small {\\n    margin: 0; }\\n  :host .messages .media-body .last {\\n    font-size: 12px;\\n    margin: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n   \n\n    constructor(public router: Router) {\n    }\n\n    ngOnInit() {}\n\n\n\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n    <mat-sidenav\\r\\n      #drawer\\r\\n      class=\\\"sidenav\\\"\\r\\n      fixedInViewport=\\\"true\\\"\\r\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n      <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\r\\n      <mat-nav-list>\\r\\n        <a mat-list-item routerLink='/dashboard'>Link 1</a>\\r\\n        <a mat-list-item routerLink=\\\"/opdreg\\\">Link 2</a>\\r\\n        <a mat-list-item href=\\\"#\\\">Link 3</a>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n      <mat-toolbar color=\\\"primary\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          aria-label=\\\"Toggle sidenav\\\"\\r\\n          mat-icon-button\\r\\n          (click)=\\\"drawer.toggle()\\\"\\r\\n          *ngIf=\\\"isHandset$ | async\\\">\\r\\n          <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n        </button>\\r\\n        <span>ehrsystem</span>\\r\\n      </mat-toolbar>\\r\\n     \\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n  \"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\"","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n    \n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n \n    \n    constructor(public router: Router,private breakpointObserver: BreakpointObserver) {\n\n      \n    }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutComponent } from './layout.component';\r\n\r\n\r\nconst routes: Routes = [ \r\n    {\r\n        path: '',\r\n        component: LayoutComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'dashboard', pathMatch: 'prefix' },\r\n            { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule' },\r\n            { path: 'forms', loadChildren: './form/form.module#FormModule' },\r\n            { path: 'reg', loadChildren: './patientreg/patientreg.module#PatientregModule' },\r\n            { path: 'registration', loadChildren: './patienregistration/patienregistration.module#PatienregistrationModule' },\r\n            { path: 'todaysreg' , loadChildren:'./todaysregistration/todaysregistration.module#TodaysregistrationModule'},\r\n            { path:'opd', loadChildren:'./opdprepration/opdprepration.module#OpdpreprationModule'},\r\n            { path:'sickapproval', loadChildren:'./sickleaveapproval/sickleaveapproval.module#sickleaveapprovalModule'} ,  \r\n            { path:'prescriptionlist', loadChildren:'./pharmacymedicinelist/pharmacymedicinelist.module#PharmacymedicinelistModule'} , \r\n            { path:'medicineissue', loadChildren:'./medicineissue/medicineissue.module#MedicineissueModule'} \r\n           \r\n            \r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LayoutRoutingModule {}\r\n","module.exports = \"<!--<app-header></app-header>\\n<app-sidebar (collapsedEvent)=\\\"receiveCollapsed($event)\\\"></app-sidebar>\\n<section class=\\\"main-container\\\" [ngClass]=\\\"{collapsed: collapedSideBar}\\\">\\n    <router-outlet></router-outlet>\\n</section>-->\\n\\n\\n<mat-sidenav-container class=\\\"sidenav-container\\\" *ngIf=\\\"isAdmin\\\">\\n    \\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar class=\\\"primarycolor\\\" >Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink='/panel/dashboard'><mat-icon>dashboard</mat-icon> Dashboard</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>queue</mat-icon> Registration</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>playlist_add_check</mat-icon> Todays List</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>new_releases</mat-icon> Medicine</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>link</mat-icon> Import Medicine</a>\\n      <mat-divider></mat-divider>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>notification_important</mat-icon> Doctors Visit</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>memory</mat-icon> Todays Report</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>compare</mat-icon> Stock Report</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>notification_important</mat-icon> Other Report</a>\\n      <a mat-list-item routerLink=\\\"/panel/forms\\\"><mat-icon>domain</mat-icon> Help</a>\\n      \\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar class=\\\"primarycolor\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      \\n\\n      <span class=\\\"fill-remaining-space\\\">\\n         \\n        <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n          <button mat-menu-item>\\n            <mat-icon>home</mat-icon>\\n            <span>Home</span>\\n          </button>\\n         \\n         \\n          <button mat-menu-item>\\n            <mat-icon>exit_to_app</mat-icon>\\n            <span>Logout</span>\\n          </button>\\n        </mat-menu>\\n      </span>\\n      <span class=\\\"fill-remaining-space\\\">Application Title</span>\\n    \\n       <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n          <mat-icon>dashboard</mat-icon>\\n        </button>\\n\\n\\n\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\\n<mat-sidenav-container class=\\\"sidenav-container\\\" *ngIf=\\\"isNotAdmin\\\">\\n  \\n     \\n      <mat-sidenav-content>\\n        <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n          <mat-toolbar class=\\\"top_header\\\">\\n              \\n                <div fxFlex=\\\"50%\\\">\\n                  <img src=\\\"assets/logo.png\\\" />\\n                </div>\\n                <div fxFlex=\\\"50%\\\" class=\\\"datetime\\\">\\n                  \\n                  <h3 class=\\\"time\\\">{{ time | date:'hh:mm:ss aa'}}</h3>\\n                  <h3 class=\\\"date\\\">{{ time | date:'dd MMM, yyyy'}}</h3>\\n                </div>\\n              \\n          </mat-toolbar>\\n        </div>\\n\\n\\n        <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\n            <mat-toolbar class=\\\"primarycolor\\\" >\\n                <mat-icon>home</mat-icon>\\n                <div fxFlex=\\\"50%\\\">\\n                   \\n                    <p class=\\\"welcome_title\\\">Welcome {{username}} </p>\\n                   \\n\\n                    <span class=\\\"fill-remaining-space\\\">\\n                        <mat-menu #menu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                          <button mat-menu-item>\\n                            <mat-icon>home</mat-icon>\\n                            <span>Home</span>\\n                          </button>\\n                         <button mat-menu-item (click)=\\\"Logout()\\\">\\n                            <mat-icon>exit_to_app</mat-icon>\\n                            <span>Logout</span>\\n                          </button>\\n                        </mat-menu>\\n                      </span>\\n\\n                   \\n                </div>\\n                <div fxFlex=\\\"50%\\\" >\\n                    <span class=\\\"estate_title\\\">Powai </span>\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" style=\\\"float: right;\\\" >\\n                        <mat-icon>person_pin</mat-icon>\\n                      </button>\\n                </div>\\n                \\n            </mat-toolbar>\\n        </div>\\n      \\n\\n\\n        <router-outlet></router-outlet>\\n      </mat-sidenav-content>\\n    </mat-sidenav-container>\\n  \\n\"","module.exports = \".fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\n     Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0; }\\n\\n.mat-drawer {\\n  background-color: #f3f3f3;\\n  color: #000000e6; }\\n\\n.mat-toolbar.mat-primary {\\n  color: #fff;\\n  z-index: 9; }\\n\\n.mat-drawer[_ngcontent-c1] {\\n  background: #f7f9fc;\\n  color: #fff; }\\n\\n.mat-nav-list .mat-list-item {\\n  height: 36px;\\n  letter-spacing: 1px;\\n  font-size: 12px; }\\n\\n.mat-nav-list .mat-list-item .mat-icon {\\n    font-size: 16px;\\n    height: 15px;\\n    width: 24px; }\\n\\n.mat-list-item-content {\\n  padding: 0 7px; }\\n\\n.top_header {\\n  background: #FFF;\\n  padding: 1% 0; }\\n\\n.top_header img {\\n    width: 31%;\\n    margin-top: 2%;\\n    margin-left: 2%; }\\n\\n.top_header .datetime {\\n    padding-right: 2%;\\n    text-align: right; }\\n\\n.top_header h3 {\\n    letter-spacing: 5px;\\n    font-weight: 400;\\n    font-size: 0.9rem;\\n    color: #3f6c8d; }\\n\\n.top_header .time {\\n    font-weight: 500;\\n    color: #f31919; }\\n\\n.top_header .date {\\n    margin-top: -13px;\\n    letter-spacing: 5px;\\n    font-size: 12px; }\\n\\n.welcome_title {\\n  font-size: 0.85rem;\\n  letter-spacing: 1px;\\n  text-indent: 5px; }\\n\\n.estate_title {\\n  font-size: 1.5rem;\\n  letter-spacing: 1px;\\n  text-indent: 5px; }\\n\\n.mat-menu-content:not(:empty) {\\n  padding-top: 0px;\\n  padding-bottom: 0px; }\\n\\n.mat-menu-item {\\n  font-size: 0.8rem; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CommonService } from '../service/common.service';\nimport * as jwt_decode from \"jwt-decode\";\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './layout.component.html',\n    styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n    time: Date;\n    currdate = new Date();\n    collapedSideBar: boolean;\n    isNotAdmin:boolean = true;\n    isAdmin:boolean = false;\n\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n    username;\n\n    constructor(private breakpointObserver: BreakpointObserver , private commonService:CommonService , private router:Router) {\n\n        setInterval(() => {         \n            this.currdate = new Date(this.currdate.setSeconds(this.currdate.getSeconds() + 1));\n            this.time = this.currdate;\n        }, 1000);\n\n       \n\n    }\n\n    ngOnInit() {\n        let token = this.getDecodedAccessToken(localStorage.getItem(\"token\"));\n        \n        this.username = localStorage.getItem('fname') +\" \"+localStorage.getItem('lname');\n    }\n\n    receiveCollapsed($event) {\n        this.collapedSideBar = $event;\n    }\n\n\n    getDecodedAccessToken(token: string): any {\n        try{\n            return jwt_decode(token);\n        }\n        catch(Error){\n            return null;\n        }\n      }\n\n      Logout(){\n        localStorage.clear();\n        this.router.navigate(['/']);\n      }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { LayoutRoutingModule } from './layout-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\nimport { OkdialogComponent } from './components/dialog/okdialog/okdialog.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        LayoutRoutingModule,\r\n        AppMaterialModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [LayoutComponent, SidebarComponent, HeaderComponent, OkdialogComponent],\r\n \r\n})\r\nexport class LayoutModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GlobalconstantService } from './globalconstant.service';\r\nimport { resolve } from 'url';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(public http: HttpClient,private global:GlobalconstantService) {}\r\n\r\n  getBloodGroup() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.bloodgrpList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getPatientType() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.patienttypeList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getRelations() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.relationList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getEstates() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.estateList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n  \r\n  getHospitals(){\r\n    return new Promise(resolve => {\r\n      this.http.get(this.global.hospitalList_URL).subscribe(data => {\r\n        resolve(data);\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n   });\r\n  }\r\n\r\n  getSickApproveList(){\r\n    return new Promise(resolve=>{\r\n      this.http.get(this.global.sickApprovalList_URL).subscribe(data=>{\r\n        resolve(data);\r\n      },err=>{console.log(err)\r\n      });\r\n    });\r\n  }\r\n\r\n  getSickLeaveApproveCount(){\r\n    return new Promise(resolve=>{this.http.get(this.global.sickApprovalCount_URL).subscribe(data=>{\r\n      resolve(data);  \r\n    },\r\n    err=>{console.log(err)\r\n    });\r\n  });\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}