{"version":3,"sources":["webpack:///./src/app/layout/sickleaveapproval/sickleaveapproval-routing.module.ts","webpack:///./src/app/layout/sickleaveapproval/sickleaveapproval.component.css","webpack:///./src/app/layout/sickleaveapproval/sickleaveapproval.component.html","webpack:///./src/app/layout/sickleaveapproval/sickleaveapproval.component.ts","webpack:///./src/app/layout/sickleaveapproval/sickleaveapproval.module.ts","webpack:///./src/app/service/common.service.ts"],"names":[],"mappings":"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","file":"sickleaveapproval-sickleaveapproval-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SickleaveapprovalComponent } from './sickleaveapproval.component';\r\n//import { TodaysregistrationComponent } from './todaysregistration.component';\r\n//SickleaveapprovalComponent\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: SickleaveapprovalComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class sickleaveapprovalRoutingModule {\r\n}\r\n","module.exports = \".table-sickleave {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .custm-btn{\\r\\n    font-size: 11px;\\r\\n    letter-spacing: 1px;\\r\\n    border-radius: 50px;\\r\\n    background: #03943f;\\r\\n  }\\r\\n\\r\\n  .custm-btn-blue{\\r\\n    font-size: 11px;\\r\\n    letter-spacing: 1px;\\r\\n    border-radius: 50px;\\r\\n    background: #1f6fc9;\\r\\n    }\\r\\n\\r\\n  .example-fill-remaining-space {\\r\\n      /* This fills the remaining space, by using flexbox. \\r\\n         Every toolbar row uses a flexbox row layout. */\\r\\n      flex: 1 1 auto;\\r\\n    }\"","module.exports = \"<div class=\\\"wraper-container\\\">\\r\\n<div class=\\\"search-container\\\">\\r\\n  <mat-card></mat-card>\\r\\n  <mat-card style=\\\"padding:0;\\\">\\r\\n    <!--<h4 class=\\\"card_title\\\"> Registration</h4>-->\\r\\n      <mat-card-content >\\r\\n        <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"center\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"100%\\\">\\r\\n        \\r\\n        <mat-toolbar>\\r\\n               <!-- <h4></h4>\\r\\n\\r\\n               <button mat-raised-button color=\\\"primary\\\" class=\\\"customeBtn\\\" (click)=gotoSickLeaveApprovalList()>\\r\\n                    Sick leave approval\\r\\n                </button> -->\\r\\n                <span>Sick leave - Approval </span>\\r\\n\\r\\n                <!-- This fills the remaining space of the current row -->\\r\\n                <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n              \\r\\n                <span>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"customeBtn\\\" (click)=goTodaysRegistration()>\\r\\n                                Back to Registration\\r\\n                        </button>\\r\\n                </span>\\r\\n\\r\\n\\r\\n        </mat-toolbar>\\r\\n        \\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n            <div class=\\\"container\\\"\\r\\n            fxLayout\\r\\n            fxLayout.xs=\\\"column\\\"\\r\\n            fxLayoutAlign=\\\"center\\\"\\r\\n            fxLayoutGap=\\\"10px\\\"\\r\\n            fxLayoutGap.xs=\\\"0\\\">\\r\\n            <div class=\\\"item item-1\\\" fxFlex=\\\"2%\\\"></div>   \\r\\n         <div class=\\\"item item-1\\\" fxFlex=\\\"48%\\\">\\r\\n                <mat-form-field>\\r\\n                        <input  matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"\\\" [formControl]=\\\"date\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n         </div>\\r\\n         <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n          \\r\\n            <p>\\r\\n                \\r\\n                <button mat-flat-button class=\\\"custm-btn\\\"\\r\\n                        matBadge=\\\"{{sickLeaveApprovalCount}}\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\">\\r\\n                        Approved\\r\\n                </button>\\r\\n            </p>  \\r\\n            \\r\\n          </div>\\r\\n\\r\\n         <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n            <p>\\r\\n                \\r\\n                <button mat-flat-button class=\\\"custm-btn-blue\\\"\\r\\n                matBadge=\\\"{{totalTodaysRegCount}}\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\">\\r\\n                Total appeal\\r\\n                </button>\\r\\n            </p>\\r\\n         </div>\\r\\n         <div class=\\\"item item-2\\\" fxFlex=\\\"20%\\\" fxFlexOrder=\\\"3\\\">\\r\\n                <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                </mat-form-field>\\r\\n         </div>\\r\\n         \\r\\n       </div>\\r\\n\\r\\n\\r\\n\\r\\n            \\r\\n     <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 reglisttable\\\" style=\\\"width: 100%;\\\" *ngIf=\\\"recordsFound\\\">\\r\\n    \\r\\n        <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                <a mat-raised-button color=\\\"accent\\\" (click)=\\\"sickApprove(row.opd_prescription_id,row.sick_leave_apprv)\\\" *ngIf=\\\"row.sick_leave_apprv=='N'\\\" class=\\\"custm-btn-blue\\\">\\r\\n                    <mat-icon>arrow_forward</mat-icon>\\r\\n                    Approve\\r\\n                </a>\\r\\n                <!-- <mat-spinner [diameter]=\\\"25\\\"  *ngIf=\\\"!isButtonActive\\\"></mat-spinner> -->\\r\\n\\r\\n                <a mat-raised-button color=\\\"accent\\\" (click)=\\\"sickApprove(row.opd_prescription_id,row.sick_leave_apprv)\\\" *ngIf=\\\"row.sick_leave_apprv=='Y'\\\" class=\\\"custm-btn\\\">\\r\\n                    <mat-icon>done</mat-icon>\\r\\n                    Approved\\r\\n                </a>\\r\\n\\r\\n\\r\\n\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"patient_code\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Patient ID </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.patient_code}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"patient_name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.patient_name}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"birthdate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> DOB </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.birthdate}} </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"gender\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Gender </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.gender}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"division_number\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Division No </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.division_number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"challan_number\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Challan No</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.challan_number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"line_number\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Line No </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.line_number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"mobile_one\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Mobile </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.mobile_one}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"no_of_days_sick\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Sick Leave </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.no_of_days_sick}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    \\r\\n      <mat-paginator [pageSizeOptions]=\\\"[100, 150, 200]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n      </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\r\nimport { CommonService } from '../../service/common.service';\r\nimport { RegistrationService } from '../../service/registration.service';\r\n\r\nimport { Router } from '@angular/router';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-sickleaveapproval',\r\n  templateUrl: './sickleaveapproval.component.html',\r\n  styleUrls: ['./sickleaveapproval.component.css']\r\n})\r\nexport class SickleaveapprovalComponent implements OnInit {\r\n  displayedColumns: string[] = [ 'action',\r\n  'patient_code',\r\n  'patient_name',\r\n  'gender', \r\n  'division_number' ,\r\n  'challan_number' ,\r\n  'line_number' ,\r\n  'mobile_one',\r\n  'no_of_days_sick'];\r\n  sickLeaveList=[];\r\n  recordsFound=false;\r\n  isButtonActive=true;\r\n\r\n  sickLeaveApprovalCount =0;\r\n  totalTodaysRegCount=0;\r\n\r\n  dataSource ;\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  constructor(private commonservice:CommonService,private registrationService:RegistrationService,private router:Router) {\r\n\r\n   }\r\n   applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  date = new FormControl(new Date());\r\n  ngOnInit() {\r\n   \r\n    this.getSickApproveList();\r\n\r\n    this.getSickLeaveApproveCount();\r\n    //this.dataSource.paginator = this.paginator;\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  getSickApproveList(){\r\n    //sickleaveList\r\n    this.sickLeaveList=[];\r\n    this.recordsFound  = false;\r\n    let dataval;\r\n    let sickLeaveData;\r\n    this.commonservice.getSickApproveList().then(data=>{\r\n      dataval =data;\r\n      sickLeaveData = dataval.sickleaveList;\r\n      this.sickLeaveList.push(sickLeaveData);\r\n      const tcount = this.sickLeaveList[0].length;\r\n      if(tcount>0){\r\n        this.recordsFound = true;\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.sickLeaveList[0]);\r\n    },\r\n    error=>{\r\n        console.log(\"Error in listing sick leave\");\r\n    });\r\n  }\r\n \r\n  getSickLeaveApproveCount()\r\n  {\r\n    let sickLeaveListCount =[];\r\n    this.totalTodaysRegCount =0;\r\n    this.sickLeaveApprovalCount =0;\r\n    let dataval;\r\n    let countData;\r\n\r\n    this.commonservice.getSickLeaveApproveCount().then(data=>{\r\n      dataval = data;\r\n      countData = dataval.result;\r\n      //console.log(countData);\r\n      this.totalTodaysRegCount=countData.totalRegister;\r\n      this.sickLeaveApprovalCount = countData.totalApproved;\r\n    },error=>{\r\n      console.log(\"Error in listing sick leave count\");\r\n    });\r\n\r\n  }\r\n\r\n sickApprove(opdId,status)\r\n  {\r\n    let sickLeaveApprovalStatus;\r\n    let response;\r\n    if(status=='Y'){\r\n      sickLeaveApprovalStatus='N'\r\n    }else{\r\n      sickLeaveApprovalStatus='Y'\r\n    }\r\n    this.registrationService.sickApprove(opdId,sickLeaveApprovalStatus).then(\r\n      data=>{\r\n        response=data;\r\n              if(response.result==1){\r\n                this.getSickApproveList();\r\n                this.getSickLeaveApproveCount();\r\n              }\r\n      },\r\n      error=>{\r\n        console.log(\"Error in sick approve update\");\r\n      }\r\n      \r\n      \r\n    );\r\n\r\n  }\r\n  \r\n\r\n  goTodaysRegistration(){\r\n    this.router.navigateByUrl('panel/todaysreg');\r\n  }\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppMaterialModule } from '../../app-material/app-material.module';\r\nimport { sickleaveapprovalRoutingModule } from './sickleaveapproval-routing.module';\r\nimport { SickleaveapprovalComponent } from './sickleaveapproval.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        sickleaveapprovalRoutingModule,\r\n        AppMaterialModule,\r\n        FormsModule,\r\n    ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        SickleaveapprovalComponent\r\n    ]\r\n})\r\nexport class sickleaveapprovalModule {\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GlobalconstantService } from './globalconstant.service';\r\nimport { resolve } from 'url';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(public http: HttpClient,private global:GlobalconstantService) {}\r\n\r\n  getBloodGroup() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.bloodgrpList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getPatientType() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.patienttypeList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getRelations() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.relationList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getEstates() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.estateList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n  \r\n  getHospitals(){\r\n    return new Promise(resolve => {\r\n      this.http.get(this.global.hospitalList_URL).subscribe(data => {\r\n        resolve(data);\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n   });\r\n  }\r\n\r\n  getSickApproveList(){\r\n    return new Promise(resolve=>{\r\n      this.http.get(this.global.sickApprovalList_URL).subscribe(data=>{\r\n        resolve(data);\r\n      },err=>{console.log(err)\r\n      });\r\n    });\r\n  }\r\n\r\n  getSickLeaveApproveCount(){\r\n    return new Promise(resolve=>{this.http.get(this.global.sickApprovalCount_URL).subscribe(data=>{\r\n      resolve(data);  \r\n    },\r\n    err=>{console.log(err)\r\n    });\r\n  });\r\n  }\r\n\r\n\r\n  deleteRecords(delid,column,fromtbl) {\r\n    let myData = JSON.stringify({tid:delid,tc:column,from:fromtbl});\r\n    return new Promise(resolve => {\r\n       this.http.post(this.global.deleteRecord_URL,myData).subscribe(data => {\r\n         resolve(data);\r\n        \r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n     });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}