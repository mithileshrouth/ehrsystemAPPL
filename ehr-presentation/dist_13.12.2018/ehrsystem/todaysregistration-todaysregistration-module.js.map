{"version":3,"sources":["webpack:///./src/app/layout/todaysregistration/todaysregistration-routing.module.ts","webpack:///./src/app/layout/todaysregistration/todaysregistration.component.css","webpack:///./src/app/layout/todaysregistration/todaysregistration.component.html","webpack:///./src/app/layout/todaysregistration/todaysregistration.component.ts","webpack:///./src/app/layout/todaysregistration/todaysregistration.module.ts","webpack:///./src/app/service/common.service.ts","webpack:///./src/app/service/datashare.service.ts"],"names":[],"mappings":"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","file":"todaysregistration-todaysregistration-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TodaysregistrationComponent } from './todaysregistration.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: TodaysregistrationComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TodaysregistrationRoutingModule {\r\n}\r\n","module.exports = \".patientsearchTabs .mat-icon {\\r\\n    padding-right: 5px;\\r\\n}\\r\\n\\r\\n.mat-header-cell {\\r\\n    color: rgb(3, 14, 41);\\r\\n    letter-spacing: 1px;\\r\\n}\\r\\n\\r\\ntr.mat-header-row {\\r\\n    background: #f9f9f9;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n.mat-cell {\\r\\n    font-size: 12px;\\r\\n    letter-spacing: 1px;\\r\\n}\\r\\n\\r\\n/*\\r\\nmat-footer-row,\\r\\nmat-header-row,\\r\\nmat-row,\\r\\ntd.mat-cell,\\r\\ntd.mat-footer-cell,\\r\\nth.mat-header-cell {\\r\\n border-bottom-color: #DCE4F8; \\r\\n}\\r\\n\\r\\n.reglisttable {\\r\\n    border: 1px solid #DCE4F8;\\r\\n}\\r\\n*/\\r\\n\\r\\n.reglisttables , .visitedtables {\\r\\n    margin-top: 0.5%;\\r\\n}\\r\\n\\r\\n.reglisttable a {\\r\\n    border-radius: 100px;\\r\\n    font-size: 12px;\\r\\n    letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.mat-tab-labels { \\r\\n    background: #1f6fc9 !important;\\r\\n    font-size: 12px;\\r\\n    letter-spacing: 1px;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.mat-tab-label-active{\\r\\n    background-color: #085287;\\r\\n    opacity: 1 !important;\\r\\n  }\\r\\n\\r\\n.mat-tab-label .mat-tab-label-content {\\r\\n    color: #FFF;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.norecord h2{\\r\\n    letter-spacing: 2px;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.card_title{\\r\\n    font-weight: 400;\\r\\n    letter-spacing: 2px;\\r\\n    font-family: Roboto;\\r\\n    font-size: 1.2rem;\\r\\n    margin:4px;\\r\\n  }\\r\\n\\r\\n.mat-expansion-panel-header {\\r\\n    font-size: 13px;\\r\\n    letter-spacing: 1px;\\r\\n}\\r\\n\\r\\n.customeBtn{\\r\\n    border: 0;\\r\\n    background: #0e58c8;\\r\\n    padding: 6px 17px;\\r\\n    border-radius: 14px;\\r\\n    color: #FFF;\\r\\n}\\r\\n\\r\\n.cutomTbl{\\r\\n    border: 1px solid #efefef;\\r\\n    border-bottom: 0px;\\r\\n}\\r\\n\\r\\n.cutomTbl tr th {\\r\\n    padding: 8px 10px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #dfe0e0;\\r\\n    font-weight: 500;\\r\\n    background: #f2f2f2;\\r\\n    font-size: 0.75rem;\\r\\n    height: 40px;\\r\\n   \\r\\n}\\r\\n\\r\\n.cutomTbl tr td {\\r\\n    padding: 8px 10px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #dfe0e0;\\r\\n    color: black;\\r\\n    font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.custombadge{\\r\\n    float: right;\\r\\n    font-weight: 500;\\r\\n    border-radius: 2px;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    line-height: 20px;\\r\\n    text-align: center;\\r\\n    color: #FFF;\\r\\n    text-align: center;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"wraper-container\\\">\\r\\n    <div class=\\\"search-container\\\">\\r\\n\\r\\n\\r\\n    \\r\\n        <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1.5%\\\" fxLayoutAlign=\\\"center\\\">\\r\\n\\r\\n           \\r\\n\\r\\n\\r\\n            <div class=\\\"patientsearchTabs\\\" fxFlex=\\\"90%\\\">\\r\\n                    <mat-toolbar style=\\\"background: transparent;\\\"> \\r\\n                            <h4 class=\\\"card_title\\\"> Today's Registration</h4>\\r\\n                    </mat-toolbar>\\r\\n                    <mat-card>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"customeBtn\\\" (click)=gotoSickLeaveApprovalList()>\\r\\n                            Sick leave approval\\r\\n                        </button>\\r\\n                    </mat-card>\\r\\n                    \\r\\n\\r\\n                <mat-tab-group (selectedTabChange)=\\\"tabChanged($event)\\\">\\r\\n                    <mat-tab>\\r\\n                        <ng-template mat-tab-label>\\r\\n                            <mat-icon>how_to_reg</mat-icon>\\r\\n                            <span matBadge=\\\"{{allcount}}\\\" matBadgeOverlap=\\\"false\\\" matBadgeColor=\\\"warn\\\"> All</span>\\r\\n                        </ng-template>\\r\\n\\r\\n                        \\r\\n                    </mat-tab>\\r\\n\\r\\n                    <mat-tab (click)=\\\"getTodaysReg()\\\">\\r\\n                        <ng-template mat-tab-label>\\r\\n                            <mat-icon class=\\\"example-tab-icon\\\">insert_chart</mat-icon>\\r\\n                            <span matBadge=\\\"{{pwcount}}\\\" matBadgeOverlap=\\\"false\\\" matBadgeColor=\\\"warn\\\"> Permanent Worker</span>\\r\\n                        </ng-template>\\r\\n                        \\r\\n                    </mat-tab>\\r\\n\\r\\n                    <mat-tab (click)=\\\"getTodaysReg()\\\">\\r\\n                        <ng-template mat-tab-label>\\r\\n                            <mat-icon class=\\\"example-tab-icon\\\">nature_people</mat-icon>\\r\\n                            <span matBadge=\\\"{{twcount}}\\\" matBadgeOverlap=\\\"false\\\" matBadgeColor=\\\"warn\\\"> Temporary Worker</span>\\r\\n                        </ng-template>\\r\\n                        \\r\\n                       \\r\\n                    </mat-tab>\\r\\n                    <mat-tab (click)=\\\"getTodaysReg()\\\">\\r\\n                        <ng-template mat-tab-label>\\r\\n                            <mat-icon class=\\\"example-tab-icon\\\">transfer_within_a_station</mat-icon>\\r\\n                            <span matBadge=\\\"{{depcount}}\\\" matBadgeOverlap=\\\"false\\\" matBadgeColor=\\\"warn\\\"> Dependent</span>\\r\\n                        </ng-template>\\r\\n                        \\r\\n                        \\r\\n                    </mat-tab>\\r\\n                    <mat-tab (click)=\\\"getTodaysReg()\\\">\\r\\n                        <ng-template mat-tab-label>\\r\\n                            <mat-icon class=\\\"example-tab-icon\\\">streetview</mat-icon>\\r\\n                            <span matBadge=\\\"{{nwcount}}\\\" matBadgeOverlap=\\\"false\\\" matBadgeColor=\\\"warn\\\"> Non-Worker</span>\\r\\n                        </ng-template>\\r\\n                        \\r\\n                       \\r\\n                    </mat-tab>\\r\\n\\r\\n                    <mat-tab (click)=\\\"getTodaysReg()\\\">\\r\\n                        <ng-template mat-tab-label>\\r\\n                            <mat-icon class=\\\"example-tab-icon\\\">visibility</mat-icon>\\r\\n                            Attended\\r\\n                        </ng-template>\\r\\n\\r\\n\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n\\r\\n\\r\\n                <div class=\\\"reglisttables\\\" *ngIf=\\\"openReglistBlock\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 reglisttable\\\" style=\\\"width: 100%;\\\" *ngIf=\\\"recordsFound\\\">\\r\\n    \\r\\n                                <ng-container matColumnDef=\\\"action\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                                        <a mat-raised-button color=\\\"warn\\\" (click)=\\\"getPresciption(row)\\\" *ngIf=\\\"isButtonActive\\\">\\r\\n                                            <mat-icon>enhanced_encryption</mat-icon>\\r\\n                                            Open\\r\\n                                        </a>\\r\\n                                        <mat-spinner [diameter]=\\\"25\\\"  *ngIf=\\\"!isButtonActive\\\"></mat-spinner>\\r\\n                                    </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"patient_code\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Patient ID </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.patient_code}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"patient_name\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.patient_name}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"birthdate\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> DOB </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.birthdate}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"gender\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Gender </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.gender}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"division_number\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Division No </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.division_number}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"challan_number\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Challan No</th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.challan_number}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"line_number\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Line No </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.line_number}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"mobile_one\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Mobile </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.mobile_one}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <ng-container matColumnDef=\\\"adhar\\\">\\r\\n                                    <th mat-header-cell *matHeaderCellDef> Aadhar </th>\\r\\n                                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.adhar}} </td>\\r\\n                                </ng-container>\\r\\n            \\r\\n                                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                            </table>\\r\\n\\r\\n\\r\\n                            <mat-toolbar class=\\\"norecord\\\" *ngIf=\\\"!recordsFound\\\">\\r\\n                                <h2>No Records found for today</h2>\\r\\n                            </mat-toolbar>\\r\\n    \\r\\n                </div><!-- Reg List Tables-->\\r\\n                <div class=\\\"visitedtables\\\"  *ngIf=\\\"!openReglistBlock\\\">\\r\\n                    \\r\\n                        <mat-accordion class=\\\"example-headers-align\\\">\\r\\n                                <mat-expansion-panel  (opened)=\\\"setStep(0)\\\" hideToggle (click)=\\\"firstTab(1)\\\">\\r\\n                                  <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <mat-icon>how_to_reg</mat-icon> All \\r\\n                                      \\r\\n                                    </mat-panel-title>\\r\\n                                    <div class=\\\"custombadge\\\" style=\\\"background: #142ba8;\\\">{{allcountVisited}}</div>\\r\\n                                  </mat-expansion-panel-header>\\r\\n                              \\r\\n                                 \\r\\n                                    <table style=\\\"width:98%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\">\\r\\n                                        <tr>\\r\\n                                            <th>Patient ID</th>\\r\\n                                            <th>Name</th>\\r\\n                                            <th>DOB</th>\\r\\n                                            <th>Gender</th>\\r\\n                                            <th>Division </th>\\r\\n                                            <th>Challan </th>\\r\\n                                            <th>Line </th>\\r\\n                                            <th>Mobile </th>\\r\\n                                            <th>Aadhar </th>\\r\\n                                            <th>Status </th>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr *ngFor=\\\"let allregVisited of todaysregistrationList[0]; let i = index \\\">\\r\\n                                            <td>{{allregVisited.patient_code}}</td>\\r\\n                                            <td>{{allregVisited.patient_name}}</td>\\r\\n                                            <td>{{allregVisited.birthdate}}</td>\\r\\n                                            <td>{{allregVisited.gender}}</td>\\r\\n                                            <td>{{allregVisited.division_number}}</td>\\r\\n                                            <td>{{allregVisited.challan_number}}</td>\\r\\n                                            <td>{{allregVisited.line_number}}</td>\\r\\n                                            <td>{{allregVisited.mobile_one}}</td>\\r\\n                                            <td>{{allregVisited.adhar}}</td>\\r\\n                                            <td>\\r\\n                                                <button mat-mini-fab>\\r\\n                                                    <mat-icon>done</mat-icon>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                          \\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n    \\r\\n                                </mat-expansion-panel> <!--end of 1-->\\r\\n                              \\r\\n                                <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\r\\n                                  <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                            <mat-icon class=\\\"example-tab-icon\\\">insert_chart</mat-icon>\\r\\n                                             Permanent Worker\\r\\n                                    </mat-panel-title>\\r\\n                                    <div class=\\\"custombadge\\\" style=\\\"background: #2f47c8;\\\">{{pwcountVisited}}</div>\\r\\n                                  </mat-expansion-panel-header>\\r\\n                                  <table style=\\\"width:98%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\">\\r\\n                                        <tr>\\r\\n                                            <th>Patient ID</th>\\r\\n                                            <th>Name</th>\\r\\n                                            <th>DOB</th>\\r\\n                                            <th>Gender</th>\\r\\n                                            <th>Division </th>\\r\\n                                            <th>Challan </th>\\r\\n                                            <th>Line </th>\\r\\n                                            <th>Mobile </th>\\r\\n                                            <th>Aadhar </th>\\r\\n                                            <th>Status </th>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr *ngFor=\\\"let permVisited of todaysregistrationList[0];  \\\">\\r\\n                                            <td>{{permVisited.patient_code}}</td>\\r\\n                                            <td>{{permVisited.patient_name}}</td>\\r\\n                                            <td>{{permVisited.birthdate}}</td>\\r\\n                                            <td>{{permVisited.gender}}</td>\\r\\n                                            <td>{{permVisited.division_number}}</td>\\r\\n                                            <td>{{permVisited.challan_number}}</td>\\r\\n                                            <td>{{permVisited.line_number}}</td>\\r\\n                                            <td>{{permVisited.mobile_one}}</td>\\r\\n                                            <td>{{permVisited.adhar}}</td>\\r\\n                                            <td>\\r\\n                                                <button mat-mini-fab>\\r\\n                                                    <mat-icon>done</mat-icon>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                          \\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n    \\r\\n                                </mat-expansion-panel>\\r\\n                              \\r\\n                                <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\r\\n                                  <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                            <mat-icon class=\\\"example-tab-icon\\\">nature_people</mat-icon>\\r\\n                                            Temporary Worker\\r\\n                                    </mat-panel-title>\\r\\n                                    <div class=\\\"custombadge\\\" style=\\\"background: #4960da;\\\">{{twcountVisited}}</div>\\r\\n                                  </mat-expansion-panel-header>\\r\\n                              \\r\\n                                  <table style=\\\"width:98%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\">\\r\\n                                        <tr>\\r\\n                                            <th>Patient ID</th>\\r\\n                                            <th>Name</th>\\r\\n                                            <th>DOB</th>\\r\\n                                            <th>Gender</th>\\r\\n                                            <th>Division </th>\\r\\n                                            <th>Challan </th>\\r\\n                                            <th>Line </th>\\r\\n                                            <th>Mobile </th>\\r\\n                                            <th>Aadhar </th>\\r\\n                                            <th>Status </th>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr *ngFor=\\\"let tempVisited of todaysregistrationList[0];  \\\">\\r\\n                                            <td>{{tempVisited.patient_code}}</td>\\r\\n                                            <td>{{tempVisited.patient_name}}</td>\\r\\n                                            <td>{{tempVisited.birthdate}}</td>\\r\\n                                            <td>{{tempVisited.gender}}</td>\\r\\n                                            <td>{{tempVisited.division_number}}</td>\\r\\n                                            <td>{{tempVisited.challan_number}}</td>\\r\\n                                            <td>{{tempVisited.line_number}}</td>\\r\\n                                            <td>{{tempVisited.mobile_one}}</td>\\r\\n                                            <td>{{tempVisited.adhar}}</td>\\r\\n                                            <td>\\r\\n                                                <button mat-mini-fab>\\r\\n                                                    <mat-icon>done</mat-icon>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                          \\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n\\r\\n                                </mat-expansion-panel>\\r\\n    \\r\\n                                <mat-expansion-panel [expanded]=\\\"step === 3\\\" (opened)=\\\"setStep(3)\\\" hideToggle>\\r\\n                                        <mat-expansion-panel-header>\\r\\n                                          <mat-panel-title>\\r\\n                                                  <mat-icon class=\\\"example-tab-icon\\\">nature_people</mat-icon>\\r\\n                                                  Dependent\\r\\n                                          </mat-panel-title>\\r\\n                                          <div class=\\\"custombadge\\\" style=\\\"background: #647aef;\\\">{{depcountVisited}}</div>\\r\\n                                        </mat-expansion-panel-header>\\r\\n                                    \\r\\n                                        \\r\\n                                        <table style=\\\"width:98%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\">\\r\\n                                                <tr>\\r\\n                                                    <th>Patient ID</th>\\r\\n                                                    <th>Name</th>\\r\\n                                                    <th>DOB</th>\\r\\n                                                    <th>Gender</th>\\r\\n                                                    <th>Division </th>\\r\\n                                                    <th>Challan </th>\\r\\n                                                    <th>Line </th>\\r\\n                                                    <th>Mobile </th>\\r\\n                                                    <th>Aadhar </th>\\r\\n                                                    <th>Status </th>\\r\\n                                                </tr>\\r\\n        \\r\\n                                                <tr *ngFor=\\\"let dependVisited of todaysregistrationList[0];  \\\">\\r\\n                                                    <td>{{dependVisited.patient_code}}</td>\\r\\n                                                    <td>{{dependVisited.patient_name}}</td>\\r\\n                                                    <td>{{dependVisited.birthdate}}</td>\\r\\n                                                    <td>{{dependVisited.gender}}</td>\\r\\n                                                    <td>{{dependVisited.division_number}}</td>\\r\\n                                                    <td>{{dependVisited.challan_number}}</td>\\r\\n                                                    <td>{{dependVisited.line_number}}</td>\\r\\n                                                    <td>{{dependVisited.mobile_one}}</td>\\r\\n                                                    <td>{{dependVisited.adhar}}</td>\\r\\n                                                    <td>\\r\\n                                                        <button mat-mini-fab>\\r\\n                                                            <mat-icon>done</mat-icon>\\r\\n                                                        </button>\\r\\n                                                    </td>\\r\\n                                                  \\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n\\r\\n                                      </mat-expansion-panel>\\r\\n    \\r\\n                                <mat-expansion-panel [expanded]=\\\"step === 4\\\" (opened)=\\\"setStep(4)\\\" hideToggle>\\r\\n                                    <mat-expansion-panel-header>\\r\\n                                        <mat-panel-title>\\r\\n                                                      <mat-icon class=\\\"example-tab-icon\\\">nature_people</mat-icon>\\r\\n                                                      Non-Worker\\r\\n                                        </mat-panel-title>\\r\\n                                        <div class=\\\"custombadge\\\" style=\\\"background: #8c9bec;\\\">{{nwcountVisited}}</div>\\r\\n                                    </mat-expansion-panel-header>\\r\\n                                        \\r\\n                                    <table style=\\\"width:98%;\\\" class=\\\"cutomTbl\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\">\\r\\n                                            <tr>\\r\\n                                                <th>Patient ID</th>\\r\\n                                                <th>Name</th>\\r\\n                                                <th>DOB</th>\\r\\n                                                <th>Gender</th>\\r\\n                                                <th>Division </th>\\r\\n                                                <th>Challan </th>\\r\\n                                                <th>Line </th>\\r\\n                                                <th>Mobile </th>\\r\\n                                                <th>Aadhar </th>\\r\\n                                                <th>Status </th>\\r\\n                                            </tr>\\r\\n    \\r\\n                                            <tr *ngFor=\\\"let nonWorkerVisited of todaysregistrationList[0];  \\\">\\r\\n                                                <td>{{nonWorkerVisited.patient_code}}</td>\\r\\n                                                <td>{{nonWorkerVisited.patient_name}}</td>\\r\\n                                                <td>{{nonWorkerVisited.birthdate}}</td>\\r\\n                                                <td>{{nonWorkerVisited.gender}}</td>\\r\\n                                                <td>{{nonWorkerVisited.division_number}}</td>\\r\\n                                                <td>{{nonWorkerVisited.challan_number}}</td>\\r\\n                                                <td>{{nonWorkerVisited.line_number}}</td>\\r\\n                                                <td>{{nonWorkerVisited.mobile_one}}</td>\\r\\n                                                <td>{{nonWorkerVisited.adhar}}</td>\\r\\n                                                <td>\\r\\n                                                    <button mat-mini-fab>\\r\\n                                                        <mat-icon>done</mat-icon>\\r\\n                                                    </button>\\r\\n                                                </td>\\r\\n                                              \\r\\n                                            </tr>\\r\\n                                        </table>    \\r\\n\\r\\n                                </mat-expansion-panel>\\r\\n                              \\r\\n                              </mat-accordion>\\r\\n                </div><!-- visited Expansen List -->\\r\\n\\r\\n\\r\\n\\r\\n            </div> <!--end of flex-->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n           \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <!--end of search container-->\\r\\n        </div>\"","\r\nimport {Component, OnInit, ViewChild ,  ViewEncapsulation } from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { CommonService } from '../../service/common.service';\r\nimport { MatTabChangeEvent } from '@angular/material';\r\nimport { RegistrationService } from '../../service/registration.service';\r\nimport { DatashareService } from '../../service/datashare.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-todaysregistration',\r\n  templateUrl: './todaysregistration.component.html',\r\n  styleUrls: ['./todaysregistration.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TodaysregistrationComponent implements OnInit {\r\n  openReglistBlock = true;\r\n  openVisitedBlock = false;\r\n  dataSource;\r\n  todaysregistrationListCount = [];\r\n  todaysregistrationList = [];\r\n  patientTypeList = [];\r\n  recordsFound = false;\r\n  isButtonActive = true;\r\n\r\n  allcount = 0;\r\n  pwcount = 0;\r\n  twcount = 0;\r\n  depcount = 0;\r\n  nwcount = 0;\r\n\r\n  allcountVisited = 0;\r\n  pwcountVisited = 0;\r\n  twcountVisited = 0;\r\n  depcountVisited = 0;\r\n  nwcountVisited = 0;\r\n  \r\n\r\n  displayedColumns: string[] = [\r\n  'action',\r\n  'patient_code',\r\n  'patient_name',\r\n  'birthdate',\r\n  'gender', \r\n  'division_number' ,\r\n  'challan_number' ,\r\n  'line_number' ,\r\n  'mobile_one',\r\n  'adhar'];\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  tabLoadTimes: Date[] = [];\r\n  constructor(private commonService:CommonService ,private registerService: RegistrationService , private datashareService:DatashareService , private router:Router) {\r\n    console.log(\"Data service \" + this.datashareService.sharedData);\r\n  }\r\n\r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n   \r\n    if(this.step == 0){\r\n      this.getTodaysRegForDoc(\"ALL\",\"Y\");\r\n    }\r\n    else if(this.step == 1){\r\n      this.getTodaysRegForDoc(\"P/W\",\"Y\");\r\n     \r\n    }\r\n    else if(this.step == 2){\r\n      this.getTodaysRegForDoc(\"T/W\",\"Y\");\r\n      \r\n    }\r\n    else if(this.step == 3){\r\n      this.getTodaysRegForDoc(\"Dep\",\"Y\");\r\n    \r\n    }\r\n    else if(this.step == 4){\r\n      this.getTodaysRegForDoc(\"N/W\",\"Y\");\r\n    }\r\n\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  firstTab(e){\r\n    //console.log(\"fgdsf\"+e);\r\n  }\r\n  ngOnInit() {\r\n    this.isButtonActive = true;\r\n   this.getTodaysRegForDoc(\"ALL\",\"N\");\r\n   this.getTodaysRegForDocCount(\"ALL\",\"N\");\r\n   this.getTodaysRegForDocCount(\"P/W\",\"N\");\r\n   this.getTodaysRegForDocCount(\"T/W\",\"N\");\r\n   this.getTodaysRegForDocCount(\"Dep\",\"N\");\r\n   this.getTodaysRegForDocCount(\"N/W\",\"N\");\r\n \r\n  }\r\n\r\n\r\n\r\n  public tabChanged(tabChangeEvent: MatTabChangeEvent): void {\r\n    this.openReglistBlock = true;\r\n    let tabindx;\r\n    tabindx = tabChangeEvent.index;\r\n    if(tabindx == 0){\r\n      this.getTodaysRegForDoc(\"ALL\",\"N\");\r\n    }\r\n    else if(tabindx == 1){\r\n      this.getTodaysRegForDoc(\"P/W\",\"N\");\r\n    }\r\n    else if(tabindx == 2){\r\n      this.getTodaysRegForDoc(\"T/W\",\"N\");\r\n    }\r\n    else if(tabindx == 3){\r\n      this.getTodaysRegForDoc(\"Dep\",\"N\");\r\n    }\r\n    else if(tabindx == 4){\r\n      this.getTodaysRegForDoc(\"N/W\",\"N\");\r\n    }\r\n    else if(tabindx == 5){\r\n      this.openReglistBlock = false;\r\n      this.getTodaysRegForDocCountVisited(\"ALL\",\"Y\");\r\n      this.getTodaysRegForDocCountVisited(\"P/W\",\"Y\");\r\n      this.getTodaysRegForDocCountVisited(\"T/W\",\"Y\");\r\n      this.getTodaysRegForDocCountVisited(\"Dep\",\"Y\");\r\n      this.getTodaysRegForDocCountVisited(\"N/W\",\"Y\");\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n  getTimeLoaded(index: number) {\r\n    if (!this.tabLoadTimes[index]) {\r\n      this.tabLoadTimes[index] = new Date();\r\n    }\r\n\r\n    return this.tabLoadTimes[index];\r\n  }\r\n\r\n  getPatientType(){\r\n  \r\n    let dataval;\r\n    let patienttypelist;\r\n    this.commonService.getPatientType().then(data => {\r\n      dataval = data;\r\n      patienttypelist = dataval.result;\r\n      this.patientTypeList.push(patienttypelist);\r\n    },\r\n    error => {\r\n     console.log(\"There is some error in Estate List...\");\r\n   });\r\n  }\r\n\r\n\r\n\r\n  getTodaysRegForDoc(type,serve) {\r\n    this.todaysregistrationList = [];\r\n    this.recordsFound  = false;\r\n    let dataval;\r\n    let regdata;\r\n    this.registerService.getTodaysRegForDoc(type,serve).then(data => {\r\n      dataval = data;\r\n      regdata = dataval.todaysreg_data;\r\n     \r\n      this.todaysregistrationList.push(regdata);\r\n      const tcount = this.todaysregistrationList[0].length;\r\n     if(tcount > 0){\r\n       this.recordsFound = true;\r\n     }\r\n      this.dataSource = new MatTableDataSource(this.todaysregistrationList[0]);\r\n      \r\n    },\r\n    error => {\r\n     console.log(\"error in todays registration list\");\r\n   });\r\n  }\r\n  getTodaysRegForDocCount(type,serve) {\r\n    this.todaysregistrationListCount = [];\r\n    let dataval;\r\n    let regdata;\r\n    this.registerService.getTodaysRegForDoc(type,serve).then(data => {\r\n      dataval = data;\r\n      regdata = dataval.todaysreg_data;\r\n      this.todaysregistrationListCount = [];\r\n      this.todaysregistrationListCount.push(regdata);\r\n      let tcount =  0;\r\n      tcount = this.todaysregistrationListCount[0].length;\r\n\r\n      if(type == \"ALL\"){\r\n        this.allcount = tcount ;\r\n      }\r\n      else if(type == \"P/W\"){\r\n        this.pwcount = tcount ;\r\n      }\r\n      else if(type == \"T/W\"){\r\n       this.twcount = tcount ;\r\n      }\r\n      else if(type == \"Dep\"){\r\n        this.depcount = tcount ; \r\n      }\r\n      else if(type == \"N/W\"){\r\n        this.nwcount = tcount ;\r\n      }\r\n\r\n    },\r\n    error => {\r\n     console.log(\"error in todays registration list\");\r\n   });\r\n  }\r\n\r\n\r\n  getTodaysRegForDocCountVisited(type,serve) {\r\n    this.todaysregistrationListCount = [];\r\n    let dataval;\r\n    let regdata;\r\n    this.registerService.getTodaysRegForDoc(type,serve).then(data => {\r\n      dataval = data;\r\n      regdata = dataval.todaysreg_data;\r\n      this.todaysregistrationListCount = [];\r\n      this.todaysregistrationListCount.push(regdata);\r\n      let tcount =  0;\r\n      tcount = this.todaysregistrationListCount[0].length;\r\n\r\n      if(type == \"ALL\"){\r\n        this.allcountVisited = tcount ;\r\n      }\r\n      else if(type == \"P/W\"){\r\n        this.pwcountVisited = tcount ;\r\n      }\r\n      else if(type == \"T/W\"){\r\n       this.twcountVisited = tcount ;\r\n      }\r\n      else if(type == \"Dep\"){\r\n        this.depcountVisited = tcount ; \r\n      }\r\n      else if(type == \"N/W\"){\r\n        this.nwcountVisited = tcount ;\r\n      }\r\n\r\n    },\r\n    error => {\r\n     console.log(\"error in todays registration list\");\r\n   });\r\n  }\r\n\r\n\r\n  getPresciption(p){\r\n//    console.log(\"P value \"+p.registration_id);\r\n    this.isButtonActive = false;\r\n    this.datashareService.saveData(p);\r\n    this.router.navigate(['/panel/opd']);\r\n  }\r\n\r\n  gotoSickLeaveApprovalList(){\r\n    \r\n    this.router.navigateByUrl('panel/sickapproval');\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport {TodaysregistrationRoutingModule  } from './todaysregistration-routing.module';\r\nimport { TodaysregistrationComponent } from './todaysregistration.component';\r\nimport { AppMaterialModule } from '../../app-material/app-material.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TodaysregistrationRoutingModule,\r\n        AppMaterialModule\r\n    ],\r\n    declarations: [\r\n        TodaysregistrationComponent\r\n    ]\r\n})\r\nexport class TodaysregistrationModule {\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GlobalconstantService } from './globalconstant.service';\r\nimport { resolve } from 'url';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(public http: HttpClient,private global:GlobalconstantService) {}\r\n\r\n  getBloodGroup() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.bloodgrpList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getPatientType() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.patienttypeList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getRelations() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.relationList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n\r\n  getEstates() {\r\n    return new Promise(resolve => {\r\n       this.http.get(this.global.estateList_URL).subscribe(data => {\r\n         resolve(data);\r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n    });\r\n  }\r\n  \r\n  getHospitals(){\r\n    return new Promise(resolve => {\r\n      this.http.get(this.global.hospitalList_URL).subscribe(data => {\r\n        resolve(data);\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n   });\r\n  }\r\n\r\n  getSickApproveList(){\r\n    return new Promise(resolve=>{\r\n      this.http.get(this.global.sickApprovalList_URL).subscribe(data=>{\r\n        resolve(data);\r\n      },err=>{console.log(err)\r\n      });\r\n    });\r\n  }\r\n\r\n  getSickLeaveApproveCount(){\r\n    return new Promise(resolve=>{this.http.get(this.global.sickApprovalCount_URL).subscribe(data=>{\r\n      resolve(data);  \r\n    },\r\n    err=>{console.log(err)\r\n    });\r\n  });\r\n  }\r\n\r\n\r\n  deleteRecords(delid,column,fromtbl) {\r\n    let myData = JSON.stringify({tid:delid,tc:column,from:fromtbl});\r\n    return new Promise(resolve => {\r\n       this.http.post(this.global.deleteRecord_URL,myData).subscribe(data => {\r\n         resolve(data);\r\n        \r\n       }, err => {\r\n         console.log(err);\r\n       });\r\n     });\r\n  }\r\n\r\n}\r\n","import {Component, Injectable } from '@angular/core';\nexport interface myData {\n  objPatient : any;\n}\n\nexport interface prescriptionData {\n  objPresSingledata : any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatashareService {\n  sharedData:string = \"\";\n  \n\n\n  constructor() { }\n\n  sharingData: myData= {objPatient:\"\"};\n  prescriptionsingleRow : prescriptionData = { objPresSingledata : \"\" };\n\n  saveData(obj){\n    this.sharingData.objPatient = obj; \n  }\n  getData()\n  {\n    return this.sharingData.objPatient;\n  }\n\n  savePrescriptionRowData(obj){\n    this.prescriptionsingleRow.objPresSingledata = obj;\n  }\n\n  getPrescriptionRowData(){\n    return this.prescriptionsingleRow.objPresSingledata;\n  }\n\n\n}\n"],"sourceRoot":""}